{"version":3,"sources":["reportWebVitals.js","api/tracker.js","context/AuthContext.js","context/createDataContext.js","components/Donut.js","components/Bar.js","components/Credits.js","components/Tabe.js","components/Home.js","components/Login.js","components/NavBar.js","components/BaseNav.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","baseURL","interceptors","request","use","config","a","useContext","AuthContext","token","state","headers","Authorization","err","Promise","reject","reducer","actions","defaultValue","Context","React","createContext","Provider","children","useReducer","dispatch","boundActions","key","value","createDataContext","action","type","mode","payload","errorMessage","profile","signin","username","password","signout","verify","phone","otp","tracker","post","response","data","console","log","clearErrorMessage","tryLocalSignin","changeToDarkMode","changeToLightMode","Donut","useState","show","setShow","style","height","width","textAlign","margin","justifyContent","alignItems","backgroundColor","ButtonGroup","marginTop","color","onClick","borderColor","marginBottom","size","categoryField","field","background","content","e","category","visible","Bar","daily_categories","monthly_categories","yearly_categories","text","autoBaseUnitSteps","categories","render","spacing","useStyles","makeStyles","theme","root","display","flexWrap","textField","paper","padding","palette","secondary","Credits","credit","setCredit","classes","withStyles","borderBottomColor","TextField","className","flexDirection","FormControl","clsx","variant","InputLabel","htmlFor","FilledInput","id","autoComplete","autoCorrect","onChange","target","labelWidth","useStyles1","flexShrink","marginLeft","TablePaginationActions","props","useTheme","count","page","rowsPerPage","onPageChange","classdate_time","IconButton","event","disabled","direction","Math","ceil","max","createData","date_time","vehicle_num","rto_id","operator_location","operator_id","operator_name","test_status","rows","sort","b","useStyles2","table","minWidth","Tabe","setPage","setRowsPerPage","emptyRows","min","length","TableContainer","component","Paper","Table","TableBody","slice","map","row","TableRow","TableCell","scope","align","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","inputProps","native","newPage","onRowsPerPageChange","parseInt","ActionsComponent","Home","image","setImage","webcamRef","useRef","setPhone","modal","setModal","setOtp","success","user","setUser","fetc","setFetc","fetcReports","fetcHistory","fetcCredits","photo","current","getScreenshot","audio","ref","alt","src","Grid","container","item","xs","Modal","onHide","Header","closeButton","fontSize","inputMode","name","placeholder","required","Login","useEffect","email","setEmail","setPassword","showPassword","setShowPassword","labelwidth","endAdornment","InputAdornment","position","onMouseDown","preventDefault","edge","Visibility","VisibilityOff","textDecorationLine","alert","NavBar","scrolled","setNavColor","setAboutTab","setHomeTab","PurpleSwitch","switchBase","checked","track","Switch","Navbar","Brand","Toggle","Collapse","Nav","Link","path","BaseNav","activeKey","Item","eventKey","ReactDOM","Fragment","document","getElementById"],"mappings":"sKAYeA,G,OAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2FCHRQ,EAAWC,IAAMC,OAAO,CAG5BC,QAAS,wDAGXH,EAASI,aAAaC,QAAQC,IAA9B,uCACE,WAAMC,GAAN,iBAAAC,EAAA,+DAC+BC,qBAAWC,GAE7B,OAFMC,EADnB,EACUC,MAASD,SAGfJ,EAAOM,QAAQC,cAAf,iBAAyCH,IAJ7C,kBAMSJ,GANT,2CADF,uDASE,SAAAQ,GACE,OAAOC,QAAQC,OAAOF,MAIXf,QC+FR,ECrHQ,SAACkB,EAASC,EAASC,GAChC,IAAMC,EAAUC,IAAMC,gBAiBtB,MAAO,CAAEF,UAASG,SAfD,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClB,EAA0BC,qBAAWR,EAASE,GAA9C,mBAAOR,EAAP,KAAce,EAAd,KAEMC,EAAe,GACrB,IAAK,IAAIC,KAAOV,EACdS,EAAaC,GAAOV,EAAQU,GAAKF,GAGnC,OACE,cAACN,EAAQG,SAAT,CAAkBM,MAAK,aAAIlB,SAAUgB,GAArC,SACGH,MDwG4BM,EAnHjB,SAACnB,EAAOoB,GAC1B,OAAQA,EAAOC,MACb,IAAK,aACH,OAAO,2BAAKrB,GAAZ,IAAmBsB,KAAMF,EAAOG,UAClC,IAAK,YACH,OAAO,2BAAKvB,GAAZ,IAAmBwB,aAAcJ,EAAOG,UAC1C,IAAK,SACH,OAAO,2BAAIvB,GAAX,IAAkBwB,aAAc,GAAIzB,MAAOqB,EAAOG,UACpD,IAAK,SACH,MAAO,CAAEC,aAAc,GAAIzB,MAAOqB,EAAOG,SAC3C,IAAK,sBACH,OAAO,2BAAKvB,GAAZ,IAAmBwB,aAAc,KACnC,IAAK,UACH,OAAO,2BAAKxB,GAAZ,IAAmByB,QAASL,EAAOG,UACrC,IAAK,UACH,MAAO,CAAExB,MAAO,KAAMyB,aAAc,IACtC,QACE,OAAOxB,KAoGX,CAAE0B,OApDW,SAAAX,GAAQ,8CAAI,uBAAAnB,EAAA,wDAAS+B,SAAT,EAAmBC,SAC5Cb,EAAS,CAAEM,KAAM,SAAUE,QAAS,UADX,2CAAJ,uDAoDXM,QAjBI,SAAAd,GAAQ,6BAAI,sBAAAnB,EAAA,sDAE1BmB,EAAS,CAAEM,KAAM,YAFS,4CAiBPS,OAnCN,SAAAf,GAAQ,8CAAI,iCAAAnB,EAAA,6DAASmC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,IAAhB,kBAKEC,EAAQC,KAAK,UAAW,CAAEH,QAAOC,QALnC,OAKfG,EALe,OAOrBpB,EAAS,CAAEM,KAAM,SAAUE,QAASY,EAASC,KAAKrC,QAP7B,gDAUnBsC,QAAQC,IAAI,sBACdvB,EAAS,CACPM,KAAM,YACNE,QAAS,iDAbU,yDAAJ,uDAmCMgB,kBAzDH,SAAAxB,GAAQ,OAAI,WACpCA,EAAS,CAAEM,KAAM,0BAwD6BmB,eAhGzB,SAAAzB,GAAQ,6BAAI,sBAAAnB,EAAA,sDACjCyC,QAAQC,IAAI,OADqB,4CAgG6BG,iBAVrC,SAAA1B,GAAQ,6BAAI,sBAAAnB,EAAA,sDACnCmB,EAAS,CAAEM,KAAM,aAAcE,QAAS,cADL,4CAU2CmB,kBANtD,SAAA3B,GAAQ,6BAAI,sBAAAnB,EAAA,sDACpCmB,EAAS,CAAEM,KAAM,aAAcE,QAAS,eADJ,6CAOtC,CAAExB,MAAO,KAAMyB,aAAc,GAAIC,QAAS,KAAMH,KAAM,cAHzCV,EAAR,EAAQA,SAAUH,EAAlB,EAAkBA,Q,qKEzGR,SAASkC,IACpB,IA8BN,EAAoC9C,qBAAWC,GAA9BwB,EAAjB,EAAQtB,MAASsB,KACjB,GADA,EAAyBI,OACDkB,mBAAS,SAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAGM,OACI,gCACI,qBAAKC,MAAO,CAAEC,OAAQ,OAAQC,MAAO,OAAOC,UAAW,SAAUC,OAAQ,SAAUC,eAAgB,SAAUC,WAAY,SAAUC,gBAAwB,eAAPhC,EAAsB,YAAc,aAAxL,SACM,eAACiC,EAAA,EAAD,CAAcR,MAAO,CAAEI,OAAQ,SAAUK,UAAW,IAAOC,MAAM,UAAU,aAAW,gCAAtF,UACI,cAAC,IAAD,CAAQC,QAAS,WAEbZ,EAAQ,SACTC,MAAO,CAAEO,gBAAwB,SAAPT,EAAuB,cAAPvB,EAAqB,UAAY,UAAmB,cAAPA,EAAqB,UAAY,YAAamC,MAAc,eAAPnC,EAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,EAAqB,UAAY,WAH5O,wBAIA,cAAC,IAAD,CAAQoC,QAAS,WAEbZ,EAAQ,gBACTC,MAAO,CAAEO,gBAAwB,gBAAPT,EAA8B,cAAPvB,EAAqB,UAAY,UAAmB,cAAPA,EAAqB,UAAY,YAAamC,MAAc,eAAPnC,EAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,EAAqB,UAAY,WAHnP,yBAIA,cAAC,IAAD,CAAQoC,QAAS,WAEbZ,EAAQ,YACTC,MAAO,CAAEO,gBAAwB,YAAPT,EAA0B,cAAPvB,EAAqB,UAAY,UAAmB,cAAPA,EAAqB,UAAY,YAAamC,MAAc,eAAPnC,EAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,EAAqB,UAAY,WAH/O,4BAMR,qBAAKyB,MAAO,CAAEC,OAAQ,MAAOC,MAAO,OAAOC,UAAW,SAAUC,OAAQ,SAAUC,eAAgB,SAAUC,WAAY,SAAUC,gBAAwB,eAAPhC,EAAsB,YAAc,YAAasC,aAAc,GAAIJ,UAAW,IAAjO,SACI,eAAC,IAAD,WACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAiBK,KAAM,GACnBxC,KAAK,QACLe,KAAa,SAAPS,EAzDd,CAAE,CAClB,KAAQ,SAAU,MAAS,KAAO,MAAS,WAE/C,CACI,KAAQ,SAAU,MAAS,KAAO,MAAS,WAE/C,CACI,KAAQ,MAAO,MAAS,KAAO,MAAS,YAkDyB,YAAPA,EArC7C,CAAE,CACrB,KAAQ,OAAQ,MAAS,KAAO,MAAS,WAE3C,CACE,KAAQ,iBAAkB,MAAS,KAAO,MAAS,WAErD,CACE,KAAQ,aAAc,MAAS,KAAO,MAAS,YAjB/B,CAAE,CAClB,KAAQ,OAAQ,MAAS,KAAO,MAAS,WAE3C,CACE,KAAQ,OAAQ,MAAS,KAAO,MAAS,WAE3C,CACE,KAAQ,OAAQ,MAAS,KAAO,MAAS,YAyCXiB,cAAc,OACdC,MAAM,QAJV,SAKI,cAAC,IAAD,CACAN,MAAM,UACNO,WAAW,OACXC,QA9BP,SAACC,GAAD,OAAOA,EAAEC,gBAkCV,cAAC,IAAD,CAAaC,SAAS,YCjE7B,SAASC,IACtB,MAAwBzB,mBAAS,SAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAWIwB,EAAmB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC5CC,EAAqB,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACnGC,EAAoB,CAAC,OAAQ,OAAQ,QAC7C,EAAoC3E,qBAAWC,GAA9BwB,EAAjB,EAAQtB,MAASsB,KAAjB,EAAyBI,OAEnB,OACI,gCACI,qBAAKqB,MAAO,CAAEC,OAAQ,OAAQC,MAAO,OAAOC,UAAW,SAAUC,OAAQ,SAAUC,eAAgB,SAAUC,WAAY,SAAUC,gBAAwB,eAAPhC,EAAsB,YAAc,aAAxL,SACM,eAACiC,EAAA,EAAD,CAAcR,MAAO,CAAEI,OAAQ,SAAUK,UAAW,IAAOC,MAAM,UAAU,aAAW,gCAAtF,UACI,cAAC,IAAD,CAAQC,QAAS,WAEbZ,EAAQ,UACTC,MAAO,CAAEO,gBAAwB,UAAPT,EAAwB,cAAPvB,EAAqB,UAAY,UAAmB,cAAPA,EAAqB,UAAY,YAAamC,MAAc,eAAPnC,EAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,EAAqB,UAAY,WAH7O,yBAIA,cAAC,IAAD,CAAQoC,QAAS,WAEbZ,EAAQ,YACTC,MAAO,CAAEO,gBAAwB,YAAPT,EAA0B,cAAPvB,EAAqB,UAAY,UAAmB,cAAPA,EAAqB,UAAY,YAAamC,MAAc,eAAPnC,EAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,EAAqB,UAAY,WAH/O,qBAIA,cAAC,IAAD,CAAQoC,QAAS,WAEbZ,EAAQ,WACTC,MAAO,CAAEO,gBAAwB,WAAPT,EAAyB,cAAPvB,EAAqB,UAAY,UAAmB,cAAPA,EAAqB,UAAY,YAAamC,MAAc,eAAPnC,EAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,EAAqB,UAAY,WAH9O,yBAMR,qBAAKyB,MAAO,CAAEC,OAAQ,QAASC,MAAO,OAAOC,UAAW,SAAUC,OAAQ,SAAUC,eAAgB,SAAUC,WAAY,SAAUC,gBAAwB,eAAPhC,EAAsB,YAAc,YAAasC,aAAc,GAAIJ,UAAW,IAAnO,SACI,eAAC,IAAD,CAAOT,MAAO,CAAEC,OAAQ,OAAQC,MAAO,MAAME,OAAQ,UAArD,UACI,cAAC,IAAD,CAAYM,MAAM,cAAcgB,KAAK,eACrC,cAAC,IAAD,UACA,cAAC,IAAD,CAAuBhB,MAAM,YAAcO,WAAW,cAAc3C,KAAK,WAAWqD,kBAAkB,MAAMC,WAAmB,WAAP9B,EAAkB2B,EAA2B,YAAP3B,EAAmB0B,EAAqBD,EAAtM,SACI,cAAC,IAAD,CAAwBb,MAAM,YAAcgB,KAAM5B,QAGtD,eAAC,IAAD,WACA,cAAC,IAAD,CAAcY,MAAM,MAAMmB,OAAQ,WAC9B,OACI,8BACY,WAAP/B,EAAkB2B,EAA2B,YAAP3B,EAAmB0B,EAAqBD,OAI3F,cAAC,IAAD,CAAiBP,MAAM,QAAQnE,GAAC,EAACiE,KAAK,OAAOxC,KAAK,MAAMwD,QAAS,GAAIpB,MAAM,UAAWrB,KAAa,WAAPS,EAzC5G,CAAC,IAAK,KAyCwI,YAAPA,EA5CzI,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAHzD,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,iBCZnC,IAAMiC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJC,QAAS,OACTC,SAAU,QAEZhC,OAAQ,CACNA,OAAQ6B,EAAMH,QAAQ,IAExBO,UAAW,CACTnC,MAAO,OACPO,UAAW,KAEb6B,MAAO,CACLC,QAASN,EAAMH,QAAQ,GACvB3B,UAAW,SACXO,MAAOuB,EAAMO,QAAQd,KAAKe,eAGf,SAASC,IAE1B,MAAoC5F,qBAAWC,GAA9BwB,EAAjB,EAAQtB,MAASsB,KACjB,GADA,EAAyBI,OACDkB,mBAAS,SAAjC,mBACA,GADA,UAC4BA,mBAAS,MAArC,mBAAO8C,EAAP,KAAeC,EAAf,KAEMC,EAAUd,IACKe,YAAW,CAC5BZ,KAAM,CACJ,sBAAuB,CACrBxB,MAAO,WAET,8BAA+B,CAC7BqC,kBAAmB,WAErB,2BAA4B,CAC1B,aAAc,CACZnC,YAAoB,eAAPrC,EAAsB,UAAY,WAEjD,mBAAoB,CAClBqC,YAAa,WAEf,yBAA0B,CACxBA,YAAa,cAhBFkC,CAoBhBE,KAEC,OACI,gCACI,qBAAKC,UAAU,cAAcjD,MAAO,CAAEI,OAAQ,SAAUF,MAAO,MAAOC,UAAW,SAAU+C,cAAe,OAA1G,SACc,eAACC,EAAA,EAAD,CAAaF,UAAWG,YAAKP,EAAQzC,OAAQyC,EAAQR,WAAYgB,QAAQ,SAAzE,UACI,cAACC,EAAA,EAAD,CAAYtD,MAAO,CAAEU,MAAc,eAAPnC,EAAsB,UAAY,UAAWqC,YAAa,WAAa2C,QAAQ,8BAA3G,sBACA,cAACC,EAAA,EAAD,CACIxD,MAAO,CAAEO,gBAAwB,eAAPhC,EAAsB,UAAY,UAAWmC,MAAc,eAAPnC,EAAsB,UAAY,WAChHkF,GAAG,8BACHnF,KAAK,OACLH,MAAOwE,EACPe,cAAc,EACdC,aAAa,EACbC,SAAU,SAACzC,GAAD,OAAKyB,EAAUzB,EAAE0C,OAAO1F,QAClC2F,WAAY,UAIhC,qBAAKb,UAAU,cAAcjD,MAAO,CAAEI,OAAQ,SAAUF,MAAO,MAAOC,UAAW,SAAU+C,cAAe,OAA1G,SACY,eAAC,IAAD,CAAQvC,QAAO,sBAAE,sBAAA9D,EAAA,0FAgBdmD,MAAO,CAAEO,gBAAuB,eAAPhC,EAAsB,UAAc,UAAWqC,YAAmB,eAAPrC,EAAsB,UAAY,UAAW2B,MAAO,OAAQD,OAAQ,OAAQQ,UAAW,IAhB9K,wBAgBkM,IAAPkC,OAEvM,qBAAK3C,MAAO,CAAEC,OAAQ,MAAOC,MAAO,OAAOC,UAAW,SAAUC,OAAQ,SAAUC,eAAgB,SAAUC,WAAY,SAAUC,gBAAwB,eAAPhC,EAAsB,UAAY,UAAWsC,aAAc,GAAIJ,UAAW,S,6KC3EvOsD,GAAa/B,aAAW,SAACC,GAAD,MAAY,CACxCC,KAAM,CACJ8B,WAAY,EACZC,WAAYhC,EAAMH,QAAQ,UAI9B,SAASoC,GAAuBC,GAC9B,IAAMtB,EAAUkB,KACV9B,EAAQmC,cACNC,EAA2CF,EAA3CE,MAAOC,EAAoCH,EAApCG,KAAMC,EAA8BJ,EAA9BI,YAAaC,EAAiBL,EAAjBK,aAkBlC,OACE,sBAAKC,eAAgB5B,EAAQX,KAA7B,UACE,cAACwC,EAAA,EAAD,CACE/D,QAnB6B,SAACgE,GAClCH,EAAaG,EAAO,IAmBhBC,SAAmB,IAATN,EACV,aAAW,aAHb,SAKuB,QAApBrC,EAAM4C,UAAsB,cAAC,KAAD,IAAmB,cAAC,KAAD,MAElD,cAACH,EAAA,EAAD,CAAY/D,QArBc,SAACgE,GAC7BH,EAAaG,EAAOL,EAAO,IAoBmBM,SAAmB,IAATN,EAAY,aAAW,gBAA7E,SACuB,QAApBrC,EAAM4C,UAAsB,cAAC,KAAD,IAAyB,cAAC,KAAD,MAExD,cAACH,EAAA,EAAD,CACE/D,QArBwB,SAACgE,GAC7BH,EAAaG,EAAOL,EAAO,IAqBvBM,SAAUN,GAAQQ,KAAKC,KAAKV,EAAQE,GAAe,EACnD,aAAW,YAHb,SAKuB,QAApBtC,EAAM4C,UAAsB,cAAC,KAAD,IAAwB,cAAC,KAAD,MAEvD,cAACH,EAAA,EAAD,CACE/D,QAxB4B,SAACgE,GACjCH,EAAaG,EAAOG,KAAKE,IAAI,EAAGF,KAAKC,KAAKV,EAAQE,GAAe,KAwB7DK,SAAUN,GAAQQ,KAAKC,KAAKV,EAAQE,GAAe,EACnD,aAAW,YAHb,SAKuB,QAApBtC,EAAM4C,UAAsB,cAAC,KAAD,IAAoB,cAAC,KAAD,SAazD,SAASI,GAAWC,EAAWC,EAAaC,EAAQC,EAAmBC,EAAaC,EAAeC,GACjG,MAAO,CAAEN,YAAWC,cAAaC,SAAQC,oBAAmBC,cAAaC,gBAAeC,eAG1F,IAAMC,GAAO,CACXR,GAAW,oBAAqB,gBAAiB,SAAU,WAAY,SAAU,QAAS,QAC1FA,GAAW,oBAAqB,gBAAiB,SAAW,WAAY,SAAU,QAAS,QAC3FA,GAAW,oBAAqB,gBAAiB,SAAW,WAAY,SAAU,QAAS,QAC3FA,GAAW,oBAAqB,gBAAiB,SAAW,WAAY,SAAU,QAAS,QAC3FA,GAAW,oBAAqB,gBAAiB,SAAW,WAAY,SAAU,QAAS,QAC3FA,GAAW,oBAAqB,gBAAiB,SAAW,WAAY,SAAU,QAAS,QAC3FA,GAAW,oBAAqB,gBAAiB,SAAW,WAAY,SAAU,QAAS,QAC3FA,GAAW,oBAAqB,gBAAiB,SAAW,WAAY,SAAU,QAAS,QAC3FA,GAAW,oBAAqB,gBAAiB,SAAW,WAAY,SAAU,QAAS,QAC3FA,GAAW,oBAAqB,gBAAiB,SAAW,WAAY,SAAU,QAAS,QAC3FA,GAAW,oBAAqB,gBAAiB,SAAW,WAAY,SAAU,QAAS,QAC3FA,GAAW,oBAAqB,gBAAiB,SAAW,WAAY,SAAU,QAAS,QAC3FA,GAAW,oBAAqB,gBAAiB,SAAW,WAAY,SAAU,QAAS,QAC3FA,GAAW,oBAAqB,gBAAiB,SAAW,WAAY,SAAU,QAAS,QAC3FA,GAAW,oBAAqB,gBAAiB,SAAW,WAAY,SAAU,QAAS,QAC3FA,GAAW,oBAAqB,gBAAiB,SAAW,WAAY,SAAU,QAAS,QAC3FA,GAAW,oBAAqB,gBAAiB,SAAW,WAAY,SAAU,QAAS,SAC3FS,MAAK,SAAC7I,EAAG8I,GAAJ,OAAW9I,EAAEsI,YAAcQ,EAAER,aAAe,EAAI,KAEjDS,GAAa5D,YAAW,CAC5B6D,MAAO,CACLC,SAAU,SAIC,SAASC,KACtB,IAAMlD,EAAU+C,KAChB,EAAwBjI,IAAMkC,SAAS,GAAvC,mBAAOyE,EAAP,KAAa0B,EAAb,KACA,EAAsCrI,IAAMkC,SAAS,GAArD,mBAAO0E,EAAP,KAAoB0B,EAApB,KAEMC,EAAY3B,EAAcO,KAAKqB,IAAI5B,EAAakB,GAAKW,OAAS9B,EAAOC,GAW3E,OACE,cAAC8B,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,eAACC,EAAA,EAAD,CAAO/B,eAAgB5B,EAAQgD,MAAO,aAAW,0BAAjD,UACE,eAACY,EAAA,EAAD,YACIlC,EAAc,EACZkB,GAAKiB,MAAMpC,EAAOC,EAAaD,EAAOC,EAAcA,GACpDkB,IACFkB,KAAI,SAACC,GAAD,OACJ,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAW9G,MAAO,CAAEE,MAAO,OAASoG,UAAU,KAAKS,MAAM,MAAzD,SACGH,EAAI1B,YAEP,cAAC4B,EAAA,EAAD,CAAW9G,MAAO,CAAEE,MAAO,OAAS8G,MAAM,SAA1C,SACGJ,EAAIzB,cAEP,cAAC2B,EAAA,EAAD,CAAW9G,MAAO,CAAEE,MAAO,OAAS8G,MAAM,SAA1C,SACGJ,EAAIxB,SAEP,cAAC0B,EAAA,EAAD,CAAW9G,MAAO,CAAEE,MAAO,OAAS8G,MAAM,SAA1C,SACGJ,EAAIvB,oBAEP,cAACyB,EAAA,EAAD,CAAW9G,MAAO,CAAEE,MAAO,OAAS8G,MAAM,SAA1C,SACGJ,EAAItB,cAEP,cAACwB,EAAA,EAAD,CAAW9G,MAAO,CAAEE,MAAO,OAAS8G,MAAM,SAA1C,SACGJ,EAAIrB,gBAEP,cAACuB,EAAA,EAAD,CAAW9G,MAAO,CAAEE,MAAO,OAAS8G,MAAM,SAA1C,SACGJ,EAAIpB,gBApBMoB,EAAI1B,cAyBpBgB,EAAY,GACX,cAACW,EAAA,EAAD,CAAU7G,MAAO,CAAEC,OAAQ,GAAKiG,GAAhC,SACE,cAACY,EAAA,EAAD,CAAWG,QAAS,SAI1B,cAACC,EAAA,EAAD,UACE,cAACL,EAAA,EAAD,UACE,cAACM,EAAA,EAAD,CACEC,mBAAoB,GACpBH,QAAS,EACT5C,MAAOoB,GAAKW,OACZ7B,YAAaA,EACbD,KAAMA,EACN+C,YAAa,CACXC,WAAY,CAAE,aAAc,iBAC5BC,QAAQ,GAEV/C,aA5Da,SAACG,EAAO6C,GAC/BxB,EAAQwB,IA4DEC,oBAzDoB,SAAC9C,GAC/BsB,EAAeyB,SAAS/C,EAAMd,OAAO1F,MAAO,KAC5C6H,EAAQ,IAwDE2B,iBAAkBzD,cCxKhC,IAAMnC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJC,QAAS,OACTC,SAAU,QAEZhC,OAAQ,CACNA,OAAQ6B,EAAMH,QAAQ,IAExBO,UAAW,CACTnC,MAAO,OACPO,UAAW,IAEb6B,MAAO,CACLC,QAASN,EAAMH,QAAQ,GACvB3B,UAAW,SACXO,MAAOuB,EAAMO,QAAQd,KAAKe,eAGjB,SAASmF,KAAO,IAAD,QAC1B,EAA0B/H,mBAAS,MAAnC,mBAAOgI,EAAP,KAAcC,EAAd,KACMC,EAAYC,iBAAO,MACzB,EAA0BnI,mBAAS,IAAnC,mBAAOb,EAAP,KAAciJ,EAAd,KACA,EAA0BpI,oBAAS,GAAnC,mBAAOqI,EAAP,KAAcC,EAAd,KACA,EAAsBtI,mBAAS,IAA/B,mBAAOZ,EAAP,KAAYmJ,EAAZ,KACA,EAA8BvI,oBAAS,GAAvC,mBAAOwI,EAAP,KACA,GADA,KACsBxI,oBAAS,IAA/B,mBACA,GADA,UAC8BA,oBAAS,IAAvC,mBACA,GADA,UAC8BA,oBAAS,IAAvC,mBACA,GADA,UAC8BA,oBAAS,IAAvC,mBACA,GADA,UACwBA,mBAAS,YAAjC,oBAAOC,GAAP,MAAaC,GAAb,MACA,GAAwBF,mBAAS,YAAjC,qBAAOyI,GAAP,MAAaC,GAAb,MACA,GAAwB1I,oBAAS,GAAjC,qBAAO2I,GAAP,MAAaC,GAAb,MACA,GAAsC5I,oBAAS,GAA/C,qBAAO6I,GAAP,MACA,IADA,MACsC7I,oBAAS,IAA/C,qBAAO8I,GAAP,MACA,IADA,MACsC9I,oBAAS,IAA/C,qBAAO+I,GAAP,MAEA,IAFA,MAEoC9L,qBAAWC,IAA9BwB,GAAjB,GAAQtB,MAASsB,KAAjB,GAAyBI,OACzBW,QAAQC,IAAI,oBAAqBhB,IAEjC,IAAMsE,GAAUd,KACKe,YAAW,CAC5BZ,KAAM,CACJ,sBAAuB,CACrBxB,MAAO,WAET,8BAA+B,CAC7BqC,kBAAmB,WAErB,2BAA4B,CAC1B,aAAc,CACZnC,YAAoB,eAAPrC,GAAsB,UAAY,WAEjD,mBAAoB,CAClBqC,YAAa,WAEf,yBAA0B,CACxBA,YAAa,cAhBFkC,CAoBhBE,KACL,OACI,sBAAKC,UAAU,cAAf,UACI,qBAAKjD,MAAO,CAAEC,OAAQ,QAASC,MAAO,OAAOC,UAAW,SAAUC,OAAQ,SAAUC,eAAgB,SAAUC,WAAY,SAAUC,gBAAwB,eAAPhC,GAAsB,UAAY,WAAvL,SACQ,eAACiC,EAAA,EAAD,CAAcR,MAAO,CAAEI,OAAQ,SAAUK,UAAW,OAAQI,aAAc,QAAUH,MAAM,UAAU,aAAW,gCAA/G,UACI,cAAC,IAAD,CAAQC,QAAS,WAEb4H,GAAQ,UACTvI,MAAO,CAAEO,gBAAwB,UAAPT,GAAwB,cAAPvB,GAAqB,UAAY,UAAmB,cAAPA,GAAqB,UAAY,YAAamC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,WAH7O,mBAIA,cAAC,IAAD,CAAQoC,QAAS,WAEb4H,GAAQ,QACTvI,MAAO,CAAEO,gBAAwB,QAAPT,GAAsB,cAAPvB,GAAqB,UAAY,UAAmB,cAAPA,GAAqB,UAAY,YAAamC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,WAH3O,iBAIA,cAAC,IAAD,CAAQoC,QAAS,WAEb4H,GAAQ,aACTvI,MAAO,CAAEO,gBAAwB,aAAPT,GAA2B,cAAPvB,GAAqB,UAAY,UAAmB,cAAPA,GAAqB,UAAY,YAAamC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,WAHhP,2BAMJ,aAAP+J,GACA,sBAAKtI,MAAO,CAAEC,OAAQ,SAAUC,MAAO,OAAQK,gBAAwB,eAAPhC,GAAsB,UAAY,UAAW6B,OAAQ,UAArH,UACG,qBAAKJ,MAAO,CAAEC,OAAQ,QAASC,MAAO,OAAOC,UAAW,SAAUC,OAAQ,SAAUC,eAAgB,SAAUC,WAAY,SAAUC,gBAAwB,eAAPhC,GAAsB,UAAY,WAAvL,SACI,eAACiC,EAAA,EAAD,CAAcR,MAAO,CAAEI,OAAQ,SAAUK,UAAW,QAAWC,MAAM,UAAU,aAAW,gCAA1F,UACI,cAAC,IAAD,CAAQC,QAAS,WAEbZ,GAAQ,QACTC,MAAO,CAAEO,gBAAwB,QAAPT,GAAsB,cAAPvB,GAAqB,UAAY,UAAmB,cAAPA,GAAqB,UAAY,YAAamC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,WAH3O,iBAIA,cAAC,IAAD,CAAQoC,QAAS,WAEbZ,GAAQ,YACTC,MAAO,CAAEO,gBAAwB,YAAPT,GAA0B,cAAPvB,GAAqB,UAAY,UAAmB,cAAPA,GAAqB,UAAY,YAAamC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,WAH/O,qBAIA,cAAC,IAAD,CAAQoC,QAAS,WAEbZ,GAAQ,YACTC,MAAO,CAAEO,gBAAwB,YAAPT,GAA0B,cAAPvB,GAAqB,UAAY,UAAmB,cAAPA,GAAqB,UAAY,YAAamC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,WAH/O,qBAIA,cAAC,IAAD,CAAQoC,QAAS,WAEbZ,GAAQ,YACTC,MAAO,CAAEO,gBAAwB,YAAPT,GAA0B,cAAPvB,GAAqB,UAAY,UAAmB,cAAPA,GAAqB,UAAY,YAAamC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,WAH/O,0BAMA,QAAPuB,IAAsB,IAAP0I,GAER,sBAAKxI,MAAO,CAAEC,OAAqC,QAASC,MAAO,MAAOK,gBAAwB,eAAPhC,GAAsB,UAAY,UAAW6B,OAAQ,SAAUS,aAAc,IAAxK,UACA,qBAAKoC,UAAU,cAAcjD,MAAO,CAAEI,OAAQ,SAAUF,MAAO,MAAOC,UAAW,SAAU+C,cAAe,OAA1G,SACI,eAACC,EAAA,EAAD,CAAaF,UAAWG,YAAKP,GAAQzC,OAAQyC,GAAQR,WAAYgB,QAAQ,SAAzE,UACI,cAACC,EAAA,EAAD,CAAYtD,MAAO,CAAEU,MAAc,eAAPnC,GAAsB,UAAY,UAAWqC,YAAa,WAAa2C,QAAQ,8BAA3G,0BACA,cAACC,EAAA,EAAD,CACIxD,MAAO,CAAEO,gBAAwB,eAAPhC,GAAsB,UAAY,UAAWmC,MAAc,eAAPnC,GAAsB,UAAY,WAChHkF,GAAG,8BACHnF,KAAK,OACLH,MAAOa,EACP0E,cAAc,EACdC,aAAa,EACbC,SAAU,SAACzC,GAAD,OAAK8G,EAAS9G,EAAE0C,OAAO1F,QACjC2F,WAAY,UAIxB,qBAAKb,UAAU,cAAcjD,MAAO,CAAEI,OAAQ,SAAUF,MAAO,MAAOC,UAAW,SAAU+C,cAAe,OAA1G,SACI,eAACC,EAAA,EAAD,CAAaF,UAAWG,YAAKP,GAAQzC,OAAQyC,GAAQR,WAAYgB,QAAQ,SAAzE,UACI,cAACC,EAAA,EAAD,CAAYtD,MAAO,CAAEU,MAAc,eAAPnC,GAAsB,UAAY,UAAWqC,YAAa,WAAa2C,QAAQ,8BAA3G,4BACA,cAACC,EAAA,EAAD,CACIxD,MAAO,CAAEO,gBAAwB,eAAPhC,GAAsB,UAAY,UAAWmC,MAAc,eAAPnC,GAAsB,UAAY,WAChHkF,GAAG,8BACHnF,KAAK,OACLH,MAAOa,EACP0E,cAAc,EACdC,aAAa,EACbC,SAAU,SAACzC,GAAD,OAAK8G,EAAS9G,EAAE0C,OAAO1F,QACjC2F,WAAY,UAIxB,qBAAKb,UAAU,cAAcjD,MAAO,CAAEI,OAAQ,SAAUF,MAAO,MAAOC,UAAW,SAAU+C,cAAe,OAA1G,SACa,OAAR2E,EACI,cAAC,IAAD,CAAQlH,QAAS,WAClB,GAAGoH,EAAU,CAET,IAAMc,EAAQd,EAAUe,QAAQC,gBAChCjB,EAASe,KAEd3I,MAAM,OAAOD,OAAO,OAAOD,MAAO,CAAEI,OAAQ,SAAUK,UAAW,IAAMuI,OAAO,EAAOC,IAAKlB,IAEzF,qBACAmB,IAAI,GACJC,IAAKtB,EACL3H,MAAM,OACND,OAAO,OACPD,MAAO,CAAGI,OAAQ,SAAUK,UAAW,IACvCwC,UAAU,+BAIV,MAAP4E,IAAqB,IAAPW,GACf,qBAAKvF,UAAU,cAAcjD,MAAO,CAAEI,OAAQ,SAAUF,MAAO,MAAOC,UAAW,SAAU+C,cAAe,OAA1G,SACI,cAAC,IAAD,CAAQvC,QAAO,sBAAE,sBAAA9D,EAAA,sDACjBsL,GAAS,GADQ,2CAiBdnI,MAAO,CAAEO,gBAAuB,eAAPhC,GAAsB,UAAc,UAAWqC,YAAmB,eAAPrC,GAAsB,UAAY,UAAW2B,MAAO,OAAQD,OAAQ,OAAQQ,UAAW,IAjB9K,wBAkBY,QAIxB,qBAAKT,MAAO,CAAEC,OAAQ,QAASC,MAAO,MAAOK,gBAAwB,eAAPhC,GAAsB,UAAY,UAAW6B,OAAQ,UAAnH,SACA,qBAAK6C,UAAU,cAAcjD,MAAO,CAAEI,OAAQ,SAAUF,MAAO,MAAOD,OAAQ,QAASE,UAAW,UAAlG,SACY,eAACiJ,EAAA,EAAD,CAAMpJ,MAAO,CAAES,UAAW,GAAK4I,WAAS,EAACvH,QAAS,EAAlD,UACI,eAACsH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,UACI,cAAC,IAAD,CAAQ5I,QAAS,aAEdX,MAAO,CAAEO,gBAAwB,cAAPhC,GAAqB,UAAa,cAAemC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,UAAW2B,MAAO,OAAQO,UAAW,IAFvN,0BAGA,cAAC,IAAD,CAAQE,QAAS,aAEdX,MAAO,CAAEO,gBAAwB,cAAPhC,GAAqB,UAAa,cAAemC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,UAAW2B,MAAO,OAAQO,UAAW,IAFvN,4BAGA,cAAC,IAAD,CAAQE,QAAS,aAEdX,MAAO,CAAEO,gBAAwB,cAAPhC,GAAqB,UAAa,cAAemC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,UAAW2B,MAAO,OAAQO,UAAW,IAFvN,2BAGA,cAAC,IAAD,CAAQE,QAAS,aAEdX,MAAO,CAAEO,gBAAwB,cAAPhC,GAAqB,UAAa,cAAemC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,UAAW2B,MAAO,OAAQO,UAAW,IAFvN,6BAIJ,eAAC2I,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,UACI,cAAC,IAAD,CAAQ5I,QAAS,aAEdX,MAAO,CAAEO,gBAAwB,cAAPhC,GAAqB,UAAa,UAAWmC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,UAAW2B,MAAO,OAAQO,UAAW,IAFnN,wBAGA,cAAC,IAAD,CAAQE,QAAS,aAEdX,MAAO,CAAEO,gBAAwB,cAAPhC,GAAqB,UAAa,UAAWmC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,UAAW2B,MAAO,OAAQO,UAAW,IAFnN,2BAGA,cAAC,IAAD,CAAQE,QAAS,aAEdX,MAAO,CAAEO,gBAAwB,cAAPhC,GAAqB,UAAa,UAAWmC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,UAAW2B,MAAO,OAAQO,UAAW,IAFnN,gCAGA,cAAC,IAAD,CAAQE,QAAS,aAEdX,MAAO,CAAEO,gBAAwB,cAAPhC,GAAqB,UAAa,UAAWmC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,UAAW2B,MAAO,OAAQO,UAAW,IAFnN,qBAIJ,cAAC2I,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,qBACJL,IAAI,GACJC,IAAKtB,EACL3H,MAAM,OACND,OAAO,OACPD,MAAO,CAAGI,OAAQ,SAAUK,UAAW,IACvCwC,UAAU,+BAEV,cAACmG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAAC,IAAD,CAAQ5I,QAAS,aAEdX,MAAO,CAAEO,gBAAwB,cAAPhC,GAAqB,UAAa,cAAemC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,UAAW2B,MAAO,QAFpM,+BAIJ,cAACkJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAAC,IAAD,CAAQ5I,QAAS,aAEdX,MAAO,CAAEO,gBAAwB,cAAPhC,GAAqB,UAAa,UAAWmC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,UAAW2B,MAAO,QAFhM,yBAIJ,cAACkJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAAC,IAAD,CAAQ5I,QAAS,aAEdX,MAAO,CAAEO,gBAAwB,cAAPhC,GAAqB,UAAa,cAAemC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,UAAW2B,MAAO,QAFpM,8BAIJ,cAACkJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAAC,IAAD,CAAQ5I,QAAS,aAEdX,MAAO,CAAEO,gBAAwB,cAAPhC,GAAqB,UAAa,UAAWmC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,UAAW2B,MAAO,QAFhM,wBAIJ,cAACkJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAAC,IAAD,CAAQ5I,QAAS,aAEdX,MAAO,CAAEO,gBAAwB,cAAPhC,GAAqB,UAAa,cAAemC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,UAAW2B,MAAO,QAFpM,oBAIJ,cAACkJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAAC,IAAD,CAAQ5I,QAAS,aAEdX,MAAO,CAAEO,gBAAwB,cAAPhC,GAAqB,UAAa,UAAWmC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,UAAW2B,MAAO,QAFhM,qBAIJ,cAACkJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAAC,IAAD,CAAQ5I,QAAS,aAEdX,MAAO,CAAEO,gBAAwB,cAAPhC,GAAqB,UAAa,cAAemC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,UAAW2B,MAAO,QAFpM,qBAIJ,cAACkJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAAC,IAAD,CAAQ5I,QAAS,aAEdX,MAAO,CAAEO,gBAAwB,cAAPhC,GAAqB,UAAa,UAAWmC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,UAAW2B,MAAO,QAFhM,sBAIJ,cAACkJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAAC,IAAD,CAAQ5I,QAAS,aAEdX,MAAO,CAAEO,gBAAwB,cAAPhC,GAAqB,UAAa,cAAemC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,UAAW2B,MAAO,QAFpM,oBAIJ,cAACkJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAAC,IAAD,CAAQ5I,QAAS,aAEdX,MAAO,CAAEO,gBAAwB,cAAPhC,GAAqB,UAAa,UAAWmC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,UAAW2B,MAAO,QAFhM,sBAIJ,cAACkJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAEf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAEf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,yBAAMvJ,MAAO,CAAEE,MAAO,UAAtB,sBAAyC,CAAEQ,MAAc,eAAPnC,GAAsB,UAAY,cAApF,qCAEJ,cAAC6K,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,yBAAMvJ,MAAO,CAAEE,MAAO,UAAtB,sBAAyC,CAAEQ,MAAc,eAAPnC,GAAsB,UAAY,cAApF,qCAEJ,cAAC6K,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,yBAAMvJ,MAAO,CAAEE,MAAO,UAAtB,sBAAyC,CAAEQ,MAAc,eAAPnC,GAAsB,UAAY,cAApF,sCAEJ,cAAC6K,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,yBAAMvJ,MAAO,CAAEE,MAAO,UAAtB,sBAAyC,CAAEQ,MAAc,eAAPnC,GAAsB,UAAY,cAApF,qCAEJ,cAAC6K,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAEf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,sBAAOvJ,MAAO,CAAEU,MAAc,eAAPnC,GAAsB,UAAY,aAAzD,wBAEJ,cAAC6K,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAAC,IAAD,CAAQ5I,QAAS,aAEdX,MAAO,CAAEO,gBAAwB,cAAPhC,GAAqB,UAAa,UAAWmC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,UAAW2B,MAAO,QAFhM,iBAIJ,cAACkJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAAC,IAAD,CAAQ5I,QAAS,aAEdX,MAAO,CAAEO,gBAAwB,cAAPhC,GAAqB,UAAa,UAAWmC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,UAAW2B,MAAO,QAFhM,iBAIJ,cAACkJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAAC,IAAD,CAAQ5I,QAAS,aAEdX,MAAO,CAAEO,gBAAwB,cAAPhC,GAAqB,UAAa,UAAWmC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,UAAW2B,MAAO,QAFhM,iBAIJ,cAACkJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAAC,IAAD,CAAQ5I,QAAS,aAEdX,MAAO,CAAEO,gBAAwB,cAAPhC,GAAqB,UAAa,UAAWmC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,UAAW2B,MAAO,QAFhM,iBAIJ,cAACkJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAEf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,sBAAMvJ,MAAO,CAAEU,MAAc,eAAPnC,GAAsB,UAAY,aAAxD,8BAEJ,cAAC6K,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAAC,IAAD,CAAQ5I,QAAS,aAEdX,MAAO,CAAEO,gBAAwB,cAAPhC,GAAqB,UAAa,UAAWmC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,UAAW2B,MAAO,QAFhM,iBAIJ,cAACkJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAAC,IAAD,CAAQ5I,QAAS,aAEdX,MAAO,CAAEO,gBAAwB,cAAPhC,GAAqB,UAAa,UAAWmC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,UAAW2B,MAAO,QAFhM,iBAIJ,cAACkJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAAC,IAAD,CAAQ5I,QAAS,aAEdX,MAAO,CAAEO,gBAAwB,cAAPhC,GAAqB,UAAa,UAAWmC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,UAAW2B,MAAO,QAFhM,iBAIJ,cAACkJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAAC,IAAD,CAAQ5I,QAAS,aAEdX,MAAO,CAAEO,gBAAwB,cAAPhC,GAAqB,UAAa,UAAWmC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,UAAW2B,MAAO,QAFhM,iBAIJ,cAACkJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAEf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,IAAD,CAAQ5I,QAAS,aAEdX,MAAO,CAAEO,gBAAwB,cAAPhC,GAAqB,UAAa,UAAWmC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,UAAW2B,MAAO,QAFhM,qCAMX,KACD,YAAPJ,IAAiC,IAAd4I,GAEpB,qBAAK1I,MAAO,CAAEC,OAAqC,QAASC,MAAO,MAAOK,gBAAwB,eAAPhC,GAAsB,UAAY,UAAW6B,OAAQ,SAAUS,aAAc,IAAxK,SACA,qBAAKoC,UAAU,cAAcjD,MAAO,CAAEI,OAAQ,SAAUF,MAAO,OAAQD,OAAQ,OAAQE,UAAW,UAAlG,SACI,eAACiJ,EAAA,EAAD,CAAMpJ,MAAO,CAAES,UAAW,GAAIR,OAAQ,OAAQC,MAAO,OAAOE,OAAQ,UAAaiJ,WAAS,EAACvH,QAAS,EAApG,UACA,cAACsH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAAC3J,EAAD,MAEJ,cAACwJ,EAAA,EAAD,CAAMpJ,MAAO,CAAEI,OAAQ,UAAakJ,MAAI,EAACC,GAAI,GAA7C,SACI,cAACjI,EAAD,aAOR,wBAEI,KACI,YAAPxB,IAAiC,IAAd6I,GAEpB,qBAAK3I,MAAO,CAAEC,OAAqC,QAASC,MAAO,MAAOK,gBAAwB,eAAPhC,GAAsB,YAAc,YAAa6B,OAAQ,SAAUS,aAAc,IAA5K,SACI,cAACkF,GAAD,MAIJ,wBAEI,KACI,YAAPjG,IAAiC,IAAd8I,GAEpB,qBAAK5I,MAAO,CAAEC,OAAqC,QAASC,MAAO,MAAOK,gBAAwB,eAAPhC,GAAsB,UAAY,UAAW6B,OAAQ,SAAUS,aAAc,IAAxK,SACI,cAAC6B,EAAD,MAIJ,wBAEI,QAEN,KAEM,QAAP4F,GACA,sBAAKtI,MAAO,CAAEC,OAAQ,SAAUC,MAAO,OAAQK,gBAAwB,eAAPhC,GAAsB,UAAY,UAAW6B,OAAQ,UAArH,UACG,qBAAKJ,MAAO,CAAEC,OAAQ,QAASC,MAAO,OAAOC,UAAW,SAAUC,OAAQ,SAAUC,eAAgB,SAAUC,WAAY,SAAUC,gBAAwB,eAAPhC,GAAsB,UAAY,WAAvL,SACI,eAACiC,EAAA,EAAD,CAAcR,MAAO,CAAEI,OAAQ,SAAUK,UAAW,QAAWC,MAAM,UAAU,aAAW,gCAA1F,UACI,cAAC,IAAD,CAAQC,QAAS,WAEbZ,GAAQ,YACTC,MAAO,CAAEO,gBAAwB,YAAPT,GAA0B,cAAPvB,GAAqB,UAAY,UAAmB,cAAPA,GAAqB,UAAY,YAAamC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,WAH/O,qBAIA,cAAC,IAAD,CAAQoC,QAAS,WAEbZ,GAAQ,WACTC,MAAO,CAAEO,gBAAwB,WAAPT,GAAyB,cAAPvB,GAAqB,UAAY,UAAmB,cAAPA,GAAqB,UAAY,YAAamC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,WAH9O,6BAIA,cAAC,IAAD,CAAQoC,QAAS,WAEbZ,GAAQ,YACTC,MAAO,CAAEO,gBAAwB,YAAPT,GAA0B,cAAPvB,GAAqB,UAAY,UAAmB,cAAPA,GAAqB,UAAY,YAAamC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,WAH/O,0BAMA,YAAPuB,IAAiC,IAAd4I,GAEpB,qBAAK1I,MAAO,CAAEC,OAAqC,QAASC,MAAO,MAAOK,gBAAwB,eAAPhC,GAAsB,UAAY,UAAW6B,OAAQ,SAAUS,aAAc,IAAxK,SACA,qBAAKoC,UAAU,cAAcjD,MAAO,CAAEI,OAAQ,SAAUF,MAAO,OAAQD,OAAQ,OAAQE,UAAW,UAAlG,SACI,eAACiJ,EAAA,EAAD,CAAMpJ,MAAO,CAAES,UAAW,GAAIR,OAAQ,OAAQC,MAAO,OAAOE,OAAQ,UAAaiJ,WAAS,EAACvH,QAAS,EAApG,UACA,cAACsH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAAC3J,EAAD,MAEJ,cAACwJ,EAAA,EAAD,CAAMpJ,MAAO,CAAEI,OAAQ,UAAakJ,MAAI,EAACC,GAAI,GAA7C,SACI,cAACjI,EAAD,aAOR,wBAEI,KACI,YAAPxB,IAAiC,IAAd6I,GAEpB,qBAAK3I,MAAO,CAAEC,OAAqC,QAASC,MAAO,MAAOK,gBAAwB,eAAPhC,GAAsB,YAAc,YAAa6B,OAAQ,SAAUS,aAAc,IAA5K,SACI,cAACkF,GAAD,MAIJ,wBAEI,KACI,WAAPjG,IAAgC,IAAd8I,GAEnB,qBAAK5I,MAAO,CAAEC,OAAqC,QAASC,MAAO,MAAOK,gBAAwB,eAAPhC,GAAsB,UAAY,UAAW6B,OAAQ,SAAUS,aAAc,MAKxK,wBAEI,QAEN,KAEM,UAAPyH,GACA,sBAAKtI,MAAO,CAAEC,OAAQ,SAAUC,MAAO,OAAQK,gBAAwB,eAAPhC,GAAsB,UAAY,UAAW6B,OAAQ,UAArH,UACG,qBAAKJ,MAAO,CAAEC,OAAQ,QAASC,MAAO,OAAOC,UAAW,SAAUC,OAAQ,SAAUC,eAAgB,SAAUC,WAAY,SAAUC,gBAAwB,eAAPhC,GAAsB,UAAY,WAAvL,SACI,eAACiC,EAAA,EAAD,CAAcR,MAAO,CAAEI,OAAQ,SAAUK,UAAW,QAAWC,MAAM,UAAU,aAAW,gCAA1F,UACI,cAAC,IAAD,CAAQC,QAAS,WAEbZ,GAAQ,YACTC,MAAO,CAAEO,gBAAwB,YAAPT,GAA0B,cAAPvB,GAAqB,UAAY,UAAmB,cAAPA,GAAqB,UAAY,YAAamC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,WAH/O,wBAIA,cAAC,IAAD,CAAQoC,QAAS,WAEbZ,GAAQ,YACTC,MAAO,CAAEO,gBAAwB,YAAPT,GAA0B,cAAPvB,GAAqB,UAAY,UAAmB,cAAPA,GAAqB,UAAY,YAAamC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,WAH/O,qBAIA,cAAC,IAAD,CAAQoC,QAAS,WAEbZ,GAAQ,WACTC,MAAO,CAAEO,gBAAwB,WAAPT,GAAyB,cAAPvB,GAAqB,UAAY,UAAmB,cAAPA,GAAqB,UAAY,YAAamC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,WAH9O,6BAIA,cAAC,IAAD,CAAQoC,QAAS,WAEbZ,GAAQ,YACTC,MAAO,CAAEO,gBAAwB,YAAPT,GAA0B,cAAPvB,GAAqB,UAAY,UAAmB,cAAPA,GAAqB,UAAY,YAAamC,MAAc,eAAPnC,GAAsB,UAAY,YAAaqC,YAAoB,cAAPrC,GAAqB,UAAY,WAH/O,0BAMA,YAAPuB,IAAiC,IAAd4I,GAEpB,qBAAK1I,MAAO,CAAEC,OAAqC,QAASC,MAAO,MAAOK,gBAAwB,eAAPhC,GAAsB,UAAY,UAAW6B,OAAQ,SAAUS,aAAc,IAAxK,SACA,qBAAKoC,UAAU,cAAcjD,MAAO,CAAEI,OAAQ,SAAUF,MAAO,OAAQD,OAAQ,OAAQE,UAAW,UAAlG,SACI,eAACiJ,EAAA,EAAD,CAAMpJ,MAAO,CAAES,UAAW,GAAIR,OAAQ,OAAQC,MAAO,OAAOE,OAAQ,UAAaiJ,WAAS,EAACvH,QAAS,EAApG,UACA,cAACsH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAAC3J,EAAD,MAEJ,cAACwJ,EAAA,EAAD,CAAMpJ,MAAO,CAAEI,OAAQ,UAAakJ,MAAI,EAACC,GAAI,GAA7C,SACI,cAACjI,EAAD,aAOR,wBAEI,KACI,YAAPxB,IAAiC,IAAd6I,GAEpB,qBAAK3I,MAAO,CAAEC,OAAqC,QAASC,MAAO,MAAOK,gBAAwB,eAAPhC,GAAsB,YAAc,YAAa6B,OAAQ,SAAUS,aAAc,IAA5K,SACI,cAACkF,GAAD,MAIJ,wBAEI,KACI,YAAPjG,IAAiC,IAAd8I,GAEpB,qBAAK5I,MAAO,CAAEC,OAAqC,QAASC,MAAO,MAAOK,gBAAwB,eAAPhC,GAAsB,UAAY,UAAW6B,OAAQ,SAAUS,aAAc,MAKxK,wBAEI,KACI,WAAPf,IAAgC,IAAd8I,GAEnB,qBAAK5I,MAAO,CAAEC,OAAqC,QAASC,MAAO,MAAOK,gBAAwB,eAAPhC,GAAsB,UAAY,UAAW6B,OAAQ,SAAUS,aAAc,MAKxK,wBAEI,QAEN,KAEF,eAAC2I,EAAA,EAAD,CAAO1J,KAAMoI,EAAOuB,OAAQ,kBAAKtB,GAAS,IAA1C,UACI,cAACqB,EAAA,EAAME,OAAP,CAAcC,aAAW,EAAChJ,QAAS,kBAAIwH,GAAS,OACrC,IAAVE,EAAkB,qBAAKrI,MAAO,CAAEO,gBAAiB,UAAWN,OAAQ,QAASG,OAAQ,SAAUF,MAAO,QAASC,UAAW,UAAxG,SACf,uBAAMH,MAAO,CAAE4J,SAAU,OAAQnJ,UAAW,OAAQC,MAAO,WAA3D,8BACsB1B,EADtB,uEAKJ,sBAAKgB,MAAO,CAAEO,gBAAiB,UAAWN,OAAQ,QAASG,OAAQ,SAAUF,MAAO,QAASC,UAAW,UAAxG,UACI,qBAAIH,MAAO,CAAES,UAAW,QAAxB,kDAC0CzB,KAE1C,qBAAKgB,MAAO,CAAEI,OAAQ,SAAUF,MAAO,QAASC,UAAW,UAA3D,SACI,uBAAO0J,UAAU,MAAMvL,KAAK,SAAS2E,UAAU,eAAe6G,KAAK,SAASC,YAAY,MAAMC,SAAS,WAAW7L,MAAOc,EAAK2E,SAAU,SAAAzC,GAAC,OAAEiH,EAAOjH,EAAE0C,OAAO1F,YAEzJ,MAALc,GAA0B,IAAbA,EAAImH,OACjB,qBAAKpG,MAAO,CAAEI,OAAQ,SAAUK,UAAW,MAAOP,MAAO,QAASC,UAAW,UAA7E,SACG,cAAC,IAAD,CAAQQ,QAAO,sBAAE,sBAAA9D,EAAA,sDACbsL,GAAS,GACTM,IAAQ,GAFK,2CAqBdpF,QAAQ,UArBX,kCAsBM,c,kCCrjBxBtB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJC,QAAS,OACTC,SAAU,QAEZhC,OAAQ,CACNA,OAAQ6B,EAAMH,QAAQ,IAExBO,UAAW,CACTnC,MAAO,aAGE,SAAS+J,KAGtBC,qBAAU,WACR,sBAAC,sBAAArN,EAAA,yFAAD,KAQC,IAwBD,MAA0BgD,mBAAS,IAAnC,mBAAOsK,EAAP,KAAcC,EAAd,KACA,EAA0BvK,oBAAS,GAAnC,mBACD,GADC,UACqBA,mBAAS,KAA/B,mBACC,GADD,UAC+BA,oBAAS,IAAvC,mBACA,GADA,UACgCA,mBAAS,KAAzC,mBAAOhB,EAAP,KAAiBwL,EAAjB,KACA,EAAoCvN,qBAAWC,GAA9BwB,EAAjB,EAAQtB,MAASsB,KAAQI,EAAzB,EAAyBA,OACzBW,QAAQC,IAAI,qBAAsBhB,GAClC,MAAwCsB,oBAAS,GAAjD,mBAAOyK,EAAP,KAAqBC,EAArB,KACM1H,EAAUd,KACKe,YAAW,CAC5BZ,KAAM,CACJ,sBAAuB,CACrBxB,MAAO,WAET,8BAA+B,CAC7BqC,kBAAmB,WAErB,2BAA4B,CAC1B,aAAc,CACZnC,YAAoB,eAAPrC,EAAsB,UAAY,WAEjD,mBAAoB,CAClBqC,YAAa,WAEf,yBAA0B,CACxBA,YAAa,cAhBFkC,CAoBhBE,KACL,OACI,qBAAKC,UAAU,aAAf,SACI,qBAAKjD,MAAO,CAAEC,OAAQ,SAAUC,MAAO,OAAQK,gBAAwB,eAAPhC,EAAsB,UAAY,UAAW6B,OAAQ,UAArH,SACI,sBAAKJ,MAAO,CAAEC,OAAQ,QAASC,MAAO,QAASE,OAAQ,UAAvD,UACI,qBAAKJ,MAAO,CAAEC,OAAQ,QAASC,MAAO,OAAQgD,cAAe,MAAO3C,gBAAwB,eAAPhC,EAAsB,UAAa,WAAxH,SACI,qBAAKyB,MAAO,CAAEC,OAAQ,OAAQC,MAAO,QAASE,OAAQ,UAAtD,SACI,qBACA8I,IAAI,GACJC,IAAI,mDACJjJ,MAAM,MACND,OAAO,MACPD,MAAO,CAAES,UAAW,GAAIwD,WAAY,UAI5C,sBAAKjE,MAAO,CAAEC,OAAQ,QAASC,MAAO,OAAQK,gBAAwB,eAAPhC,EAAsB,UAAa,WAAlG,UACI,oBAAIyB,MAAO,CAAEU,MAAa,eAAPnC,EAAsB,UAAc,WAAvD,yBACA,oBAAIyB,MAAO,CAAEU,MAAa,eAAPnC,EAAsB,YAAgB,aAAzD,oDACA,qBAAK0E,UAAU,cAAcjD,MAAO,CAAEI,OAAQ,SAAUF,MAAO,QAASC,UAAW,SAAUM,UAAW,IAAxG,SACI,eAAC0C,EAAA,EAAD,CAAaF,UAAWG,YAAKP,EAAQzC,OAAQyC,EAAQR,WAAYgB,QAAQ,SAAzE,UACI,cAACC,EAAA,EAAD,CAAYtD,MAAO,CAAEU,MAAO,UAAWE,YAAa,WAAa2C,QAAQ,8BAAzE,uBACA,cAACC,EAAA,EAAD,CACIxD,MAAO,CAAEO,gBAAwB,eAAPhC,EAAsB,UAAY,WAC5DkF,GAAG,8BACHnF,KAAK,OACLH,MAAOgM,EACPzG,aAAa,OACbE,SAAU,SAACzC,GAAD,OAAKiJ,EAASjJ,EAAE0C,OAAO1F,QACjCqM,WAAY,UAIxB,qBAAKvH,UAAU,cAAcjD,MAAO,CAAEI,OAAQ,SAAUF,MAAO,QAASC,UAAW,SAAUM,UAAW,IAAxG,SACI,eAAC0C,EAAA,EAAD,CAAaF,UAAWG,YAAKP,EAAQzC,OAAQyC,EAAQR,WAAYgB,QAAQ,SAAzE,UACI,cAACC,EAAA,EAAD,CAAYtD,MAAO,CAAEU,MAAO,UAAWE,YAAa,WAAe2C,QAAQ,8BAA3E,sBACA,cAACC,EAAA,EAAD,CACIxD,MAAO,CAAEO,gBAAwB,eAAPhC,EAAsB,UAAY,WAC5DkF,GAAG,8BACHnF,KAAMgM,EAAe,OAAS,WAC9BnM,MAAOU,EACP6E,aAAa,OACbE,SAAU,SAACzC,GAAD,OAAKkJ,EAAYlJ,EAAE0C,OAAO1F,QACpCsM,aACA,cAACC,GAAA,EAAD,CAAgBC,SAAS,MAAzB,SACI,cAACjG,EAAA,EAAD,CACA,aAAW,6BACX/D,QAAS,kBAAI4J,GAAiBD,IAC9BM,YAAa,SAACzJ,GAAD,OAAMA,EAAE0J,kBACrBC,KAAK,MAJL,SAMCR,EAAe,cAACS,GAAA,EAAD,IAAiB,cAACC,GAAA,EAAD,QAIrCR,WAAY,UAIxB,sBAAKxK,MAAO,CAAEI,OAAQ,SAAUK,UAAW,OAAQP,MAAO,QAASC,UAAW,UAA9E,UACA,cAAC,IAAD,CAAQQ,QAAO,sBAAE,sBAAA9D,EAAA,sDAKb8B,EAAO,CAAEC,SAAUuL,EAAOtL,SAAUA,IALvB,2CAoBdmB,MAAO,CAAEO,gBAAuB,eAAPhC,EAAsB,UAAc,UAAWqC,YAAmB,eAAPrC,EAAsB,UAAY,UAAW2B,MAAO,QAASD,OAAQ,QApB5J,sBAqBA,sBAAKD,MAAO,CAAE4J,SAAU,OAAQlJ,MAAa,eAAPnC,EAAsB,UAAc,UAAWkC,UAAW,QAAUwC,UAAU,cAApH,yCAA8J,sBAAMjD,MAAO,CAAE4J,SAAU,OAAQlJ,MAAa,eAAPnC,EAAsB,UAAc,UAAW0M,mBAAoB,aAAetK,QAAS,WAE5RuK,MAAM,QAFoJ,iBAA9J,MAGgB,sBAAMlL,MAAO,CAAE4J,SAAU,OAAQlJ,MAAc,eAAPnC,EAAsB,UAAa,UAAW0M,mBAAoB,aAAetK,QAAS,WAE9IuK,MAAM,OAFM,4C,cCzJzB,SAASC,GAAOC,GAE3B,MAAiEtO,qBAAWC,GAA3DwB,EAAjB,EAAQtB,MAASsB,KAAQmB,EAAzB,EAAyBA,iBAAkBC,EAA3C,EAA2CA,kBAC3C,EAAgCE,mBAAS,WAAzC,mBAAiBwL,GAAjB,WACA,EAA+BxL,oBAAS,GAAxC,mBAAiByL,GAAjB,WACA,EAA8BzL,oBAAS,GAAvC,mBAAgB0L,GAAhB,WACkBvO,EAAYF,qBAAWC,GAAjCE,MAAUD,MAqBhBwO,EAAe1I,YAAW,CAC5B2I,WAAY,CACV/K,MAAc,cAAPnC,EAAqB,UAAY,UACxC,YAAa,CACXmC,MAAc,cAAPnC,EAAqB,UAAY,WAE1C,qBAAsB,CACpBgC,gBAAsC,YAG1CmL,QAAS,GACTC,MAAO,IAXU7I,CAYhB8I,MACD,OACI,eAAC,IAAD,WACI,8BACI,eAACC,EAAA,EAAD,CAAiD5I,UAAU,gBAC3DjD,MAAO,CAAEO,gBAAwB,eAAPhC,EAA6B,MAAPvB,EAAc,UAAY,UAAmB,MAAPA,EAAc,UAAY,WADhH,UAEI,cAAC6O,EAAA,EAAOC,MAAR,UACY,MAAP9O,EACD,qBACIkM,IAAI,GACJC,IAAI,mDACJjJ,MAAM,MACND,OAAO,MACPgD,UAAU,6BACT,OAET,cAAC4I,EAAA,EAAOE,OAAR,CAAe,gBAAc,qBAC7B,eAACF,EAAA,EAAOG,SAAR,CAAiBvI,GAAG,mBAApB,UACI,cAACwI,EAAA,EAAD,CAAKhJ,UAAU,UAAf,SACa,OAARjG,EACA,cAACiP,EAAA,EAAIC,KAAL,CAAUvL,QAAS,WAChB0K,EAAY,WAEZE,GAAW,GACXD,GAAY,IACbtL,MAAO,CAAEU,MAAO,UAAWkJ,SAAU,UACpC,OAER,cAACqC,EAAA,EAAD,CAAKhJ,UAAU,UAAf,SACI,cAACuI,EAAD,CAAcE,QAAgB,cAAPnN,EAAmCqF,SAAU,SAACzC,IAC3C,IAAnBA,EAAE0C,OAAO6H,QACRhM,IAEAC,iBAOxB,8BACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAOwM,KAAK,IAAZ,SACY,MAAPnP,EACD,cAAC4K,GAAD,IAAW,cAACqC,GAAD,aCxFpB,SAASmC,KAEpB,MAAiEtP,qBAAWC,GAA3DwB,EAAjB,EAAQtB,MAASsB,KAAjB,EAAyBmB,iBAAzB,EAA2CC,kBACtBmD,YAAW,CAC5B2I,WAAY,CACV/K,MAAO,UACP,YAAa,CACXA,MAAO,WAET,qBAAsB,CACpBH,gBAAiB,YAGrBmL,QAAS,GACTC,MAAO,IAXU7I,CAYhB8I,MACL,OACI,cAAC,IAAD,UACI,8BACI,eAACK,EAAA,EAAD,CAAKjM,MAAO,CAAEO,gBAAuB,eAAPhC,EAAsB,UAAY,WAAa0E,UAAU,yBAAyBoJ,UAAU,IAA1H,UACI,cAACJ,EAAA,EAAIK,KAAL,UACA,cAACL,EAAA,EAAIC,KAAL,CAAUlM,MAAO,CAAEU,MAAc,eAAPnC,EAAsB,YAAc,UAAWqL,SAAU,QAAU2C,SAAS,SAAtG,8BAEA,cAACN,EAAA,EAAIK,KAAL,UACA,cAACL,EAAA,EAAIC,KAAL,CAAUlM,MAAO,CAAEU,MAAc,eAAPnC,EAAsB,YAAc,UAAWqL,SAAU,QAAU2C,SAAS,SAAtG,mBAEA,cAACN,EAAA,EAAIK,KAAL,UACA,cAACL,EAAA,EAAIC,KAAL,CAAUlM,MAAO,CAAEU,MAAc,eAAPnC,EAAsB,YAAc,YAAaqL,SAAU,QAAU2C,SAAS,SAAxG,4DC1BpBC,IAAS3K,OACL,cAAC,IAAM4K,SAAP,UACE,eAAC,EAAD,WACE,cAACtB,GAAD,IACA,cAACiB,GAAD,SAGNM,SAASC,eAAe,SAM1B/Q,M","file":"static/js/main.7ee48b9f.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios';\nimport { useContext } from 'react';\nimport { Context as AuthContext } from '../context/AuthContext';\n\nconst instance = axios.create({\n  //baseURL: 'http://f925f9d7ddf5.ngrok.io/'\n  //baseURL: 'http://13.233.138.227:8080/mis-web-app'\n  baseURL: 'http://13.233.138.227:8080/puc-certificate-services'\n});\n\ninstance.interceptors.request.use(\n  async config => {\n    const { state: { token } } = useContext(AuthContext)\n  //  const token = await AsyncStorage.getItem('token');\n    if (token!=null) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  err => {\n    return Promise.reject(err);\n  }\n); \n\nexport default instance;\n\n/*\nhttp://13.233.138.227:8080/mis-web-app\n*/","\nimport createDataContext from './createDataContext';\nimport tracker from '../api/tracker';\n\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'changemode':\n      return { ...state, mode: action.payload };\n    case 'add_error':\n      return { ...state, errorMessage: action.payload };\n    case 'signin':\n      return {...state, errorMessage: '', token: action.payload };\n    case 'verify':\n      return { errorMessage: '', token: action.payload };\n    case 'clear_error_message':\n      return { ...state, errorMessage: '' };\n    case 'profile':\n      return { ...state, profile: action.payload };\n    case 'signout':\n      return { token: null, errorMessage: '' };\n    default:\n      return state;\n  }\n};\n\nconst tryLocalSignin = dispatch => async () => {\n  console.log('one');\n // const token = await AsyncStorage.getItem('token');\n // console.log('2');\n // if (token) {\n //   console.log('3');\n //   await dispatch({ type: 'signin', payload: token });\n //   console.log('4');\n  /*  const response = await tracker.get('/profile');\n    if (response.data.length>0) {\n      console.log('response is: ', response.data);\n      await dispatch({ type: 'profile', payload: response.data });\n      SplashScreen.hide();\n      navigate('Home')\n    } else {\n          Alert.alert(\n            \"Error Occurred\",\n            \"no worries, try by closing the app and opening it again\",\n            [\n                {\n                text: \"Ok\", onPress: ()=> {\n                  BackHandler.exitApp();\n                },\n                style: \"cancel\"\n                },\n            ],\n            { cancelable: false }\n            )\n    }*/\n     // SplashScreen.hide();\n     // navigate('Home')\n  //} else {\n    //console.log('5');\n   // SplashScreen.hide();\n    //navigate('Register');\n // }\n};\n\n\nconst clearErrorMessage = dispatch => () => {\n  dispatch({ type: 'clear_error_message' });\n};\n\n\nconst signin = dispatch => async ({ username, password }) => {\n  dispatch({ type: 'signin', payload: 'token' });\n  /*try {\n    const response = await tracker.post(`/login?username=${username}&password=${password}`);\n    console.log(response.data);\n   if (response){\n      dispatch({ type: 'signin', payload: response.data.token });\n   }\n  } catch (err) {\n      console.log('there is an error');\n    dispatch({\n      type: 'add_error',\n      payload: 'Something went wrong, try restarting the app'\n    });\n  }*/\n};\n\nconst verify = dispatch => async ({ phone, otp }) => {\n // await AsyncStorage.setItem('token', 'token');\n // dispatch({ type: 'verify', payload: 'token' });\n // navigate('ResolveAuth');\n    try {\n      const response = await tracker.post('/verify', { phone, otp });\n    //  await AsyncStorage.setItem('token', response.data.token);\n      dispatch({ type: 'verify', payload: response.data.token });\n      //navigate('ResolveAuth');\n    } catch (err) {\n        console.log('verification error')\n      dispatch({\n        type: 'add_error',\n        payload: 'Something went wrong, try restarting the app'\n      });\n    }\n  };\n\nconst signout = dispatch => async () => {\n // await AsyncStorage.removeItem('token');\n  dispatch({ type: 'signout' });\n // navigate('SignIn');\n  };\n\n\n  const changeToDarkMode = dispatch => async () => {\n    dispatch({ type: 'changemode', payload: 'Dark Mode' })\n  };\n\n  const changeToLightMode = dispatch => async () => {\n    dispatch({ type: 'changemode', payload: 'Light Mode' })\n  };\n\nexport const { Provider, Context } = createDataContext(\n  authReducer,\n  { signin, signout, verify, clearErrorMessage, tryLocalSignin, changeToDarkMode, changeToLightMode },\n  { token: null, errorMessage: '', profile: null, mode: 'Dark Mode' }\n);\n\n"," import React, { useReducer } from 'react';\n\nexport default (reducer, actions, defaultValue) => {\n  const Context = React.createContext();\n\n  const Provider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, defaultValue);\n\n    const boundActions = {};\n    for (let key in actions) {\n      boundActions[key] = actions[key](dispatch);\n    }\n\n    return (\n      <Context.Provider value={{ state, ...boundActions }}>\n        {children}\n      </Context.Provider>\n    );\n  };\n\n  return { Context, Provider };\n};","import React, { useContext, useState } from 'react';\n\nimport {\n    Chart,\n    ChartLegend,\n    ChartSeries,\n    ChartSeriesItem,\n    ChartSeriesLabels,\n  } from \"@progress/kendo-react-charts\";\n  import \"hammerjs\";\nimport { Button, ButtonGroup, Grid } from '@material-ui/core';\nimport { Context as AuthContext } from '../context/AuthContext';\n\n\n  export default function Donut(){\n      const fuel_data = [ {\n        \"kind\": \"Petrol\", \"share\": 0.175, \"color\": \"#ff9c2b\"\n    }, \n    {\n        \"kind\": \"Diesel\", \"share\": 0.238, \"color\": \"#ff2bc6\"\n    },\n    {\n        \"kind\": \"CNG\", \"share\": 0.118, \"color\": \"#c6ff2b\"\n    }, \n];\nconst test_data = [ {\n  \"kind\": \"Pass\", \"share\": 0.375, \"color\": \"#32a852\"\n}, \n{\n  \"kind\": \"Fail\", \"share\": 0.238, \"color\": \"#ff3838\"\n},\n{\n  \"kind\": \"Null\", \"share\": 0.018, \"color\": \"#4287f5\"\n}, \n];\nconst vehicle_data = [ {\n  \"kind\": \"2 -W\", \"share\": 0.175, \"color\": \"#832bff\"\n}, \n{\n  \"kind\": \"Passenger Cars\", \"share\": 0.238, \"color\": \"#2bffdf\"\n},\n{\n  \"kind\": \"Commercial\", \"share\": 0.118, \"color\": \"#c6ff2b\"\n}, \n];\nconst { state: { mode }, signin } = useContext(AuthContext);\nconst [show, setShow] = useState('Fuel');\n\n    const labelContent = (e) => e.category;\n      return (\n          <div>\n              <div style={{ height: '70px', width: '100%',textAlign: 'center', margin: '0 auto', justifyContent: 'center', alignItems: 'center', backgroundColor: mode==='Light Mode' ? '#F3F3F500' : '#25252600' }}>\n                    <ButtonGroup  style={{ margin: '0 auto', marginTop: 20, }} color=\"primary\" aria-label=\"outlined primary button group\">\n                        <Button onClick={()=>{\n                            //\n                            setShow('Fuel');\n                        }} style={{ backgroundColor: show==='Fuel' ? mode==='Dark Mode' ? '#252526' : '#ffffff' : mode==='Dark Mode' ? '#1e1e1e' : '#fafafa99', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#252525' : '#ffffff' }}>   Fuel   </Button>\n                        <Button onClick={()=>{\n                            //\n                            setShow('Test Result');\n                        }} style={{ backgroundColor: show==='Test Result' ? mode==='Dark Mode' ? '#252526' : '#ffffff' : mode==='Dark Mode' ? '#1e1e1e' : '#fafafa99', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#252526' : '#ffffff' }}>Test Result</Button>\n                        <Button onClick={()=>{\n                            //\n                            setShow('Vehicle');\n                        }} style={{ backgroundColor: show==='Vehicle' ? mode==='Dark Mode' ? '#252526' : '#ffffff' : mode==='Dark Mode' ? '#1e1e1e' : '#fafafa99', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#252526' : '#ffffff' }}> Vehicle </Button>\n                    </ButtonGroup>\n                </div>\n                <div style={{ height: '50%', width: '100%',textAlign: 'center', margin: '0 auto', justifyContent: 'center', alignItems: 'center', backgroundColor: mode==='Light Mode' ? '#F3F3F500' : '#1e1e1e00', marginBottom: 20, marginTop: 20 }}>\n                    <Chart>\n                        <ChartSeries>\n                            <ChartSeriesItem size={50}\n                                type=\"donut\"\n                                data={show==='Fuel' ? fuel_data : show==='Vehicle' ? vehicle_data : test_data}\n                                categoryField=\"kind\"\n                                field=\"share\">\n                                <ChartSeriesLabels\n                                color=\"#f3f3f5\"\n                                background='none'\n                                content={labelContent}\n                                />\n                            </ChartSeriesItem>\n                            </ChartSeries>\n                        <ChartLegend visible={false} />\n                    </Chart>\n                </div>\n          </div>\n      )\n  }","import React, { useContext, useState } from 'react';\n\nimport {\n    Chart,\n    ChartTitle,\n    ChartSeries,\n    ChartSeriesItem,\n    ChartCategoryAxis,\n    ChartCategoryAxisTitle,\n    ChartCategoryAxisItem,\n    ChartTooltip,\n  } from \"@progress/kendo-react-charts\";\n  import \"hammerjs\";\nimport { Button, ButtonGroup, Grid } from '@material-ui/core';\nimport { Context as AuthContext } from '../context/AuthContext';\n\n\n  export default function Bar(){\n    const [show, setShow] = useState('daily');\n  \nconst [daily] = [\n    [100, 123, 234, 343, 220, 270, 40],\n  ];\n  const [monthly] = [\n      [100, 123, 234, 343, 220, 270, 40, 234, 343, 220, 270, 40],\n    ];\n    const [yearly] = [\n        [100, 123],\n      ];\n  const daily_categories = [27, 26, 25, 24, 23, 22, 22];\n  const monthly_categories = ['Jul', 'Jun', 'May', 'Apr', 'Mar', 'Feb', 'Jan', 'Dec', 'Nov', 'Oct', 'Sep', 'Aug'];\n  const yearly_categories = ['2021', '2020', '2019'];\nconst { state: { mode }, signin } = useContext(AuthContext);\n\n      return (\n          <div>\n              <div style={{ height: '70px', width: '100%',textAlign: 'center', margin: '0 auto', justifyContent: 'center', alignItems: 'center', backgroundColor: mode==='Light Mode' ? '#F3F3F500' : '#25252600' }}>\n                    <ButtonGroup  style={{ margin: '0 auto', marginTop: 20, }} color=\"primary\" aria-label=\"outlined primary button group\">\n                        <Button onClick={()=>{\n                            //\n                            setShow('daily');\n                        }} style={{ backgroundColor: show==='daily' ? mode==='Dark Mode' ? '#252526' : '#ffffff' : mode==='Dark Mode' ? '#1e1e1e' : '#fafafa99', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#252525' : '#ffffff' }}>Last 7 days</Button>\n                        <Button onClick={()=>{\n                            //\n                            setShow('monthly');\n                        }} style={{ backgroundColor: show==='monthly' ? mode==='Dark Mode' ? '#252526' : '#ffffff' : mode==='Dark Mode' ? '#1e1e1e' : '#fafafa99', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#252525' : '#ffffff' }}>Monthly</Button>\n                        <Button onClick={()=>{\n                            //\n                            setShow('yearly');\n                        }} style={{ backgroundColor: show==='yearly' ? mode==='Dark Mode' ? '#252526' : '#ffffff' : mode==='Dark Mode' ? '#1e1e1e' : '#fafafa99', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#252525' : '#ffffff' }}>Yearly</Button>\n                    </ButtonGroup>\n                </div>\n                <div style={{ height: '250px', width: '100%',textAlign: 'center', margin: '0 auto', justifyContent: 'center', alignItems: 'center', backgroundColor: mode==='Light Mode' ? '#F3F3F500' : '#1e1e1e00', marginBottom: 20, marginTop: 20 }}>\n                    <Chart style={{ height: '100%', width: '90%',margin: '0 auto',  }}>\n                        <ChartTitle color='transparent' text=\"Units sold\" />\n                        <ChartCategoryAxis >\n                        <ChartCategoryAxisItem color='#4287f560'   background='transparent' type='category' autoBaseUnitSteps='fit' categories={show==='yearly' ? yearly_categories : show==='monthly' ? monthly_categories : daily_categories}>\n                            <ChartCategoryAxisTitle color='#4287f500'   text={show} />\n                        </ChartCategoryAxisItem>\n                        </ChartCategoryAxis>\n                        <ChartSeries>\n                        <ChartTooltip color='red' render={()=>{\n                            return (\n                                <div>\n                                    {show==='yearly' ? yearly_categories : show==='monthly' ? monthly_categories : daily_categories}\n                                </div>\n                            )\n                        }} />\n                        <ChartSeriesItem field='order' a size='90px' type=\"bar\" spacing={30} color='#4287f5'  data={show==='yearly' ? yearly : show==='monthly' ? monthly : daily} />\n                        </ChartSeries>\n                    </Chart>\n                </div>\n          </div>\n      )\n  }","import React, { useContext, useState } from 'react';\n\nimport { Context as AuthContext } from '../context/AuthContext';\nimport { FormControl, IconButton, InputAdornment, InputLabel, makeStyles, OutlinedInput, TextField, withStyles, Button, FilledInput } from '@material-ui/core';\nimport { SingleBedOutlined, Visibility, VisibilityOff } from '@material-ui/icons';\n\nimport clsx from 'clsx';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    margin: {\n      margin: theme.spacing(0),\n    },\n    textField: {\n      width: '100%',\n      marginTop: 160,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n  }));\n  export default function Credits(){\n      \nconst { state: { mode }, signin } = useContext(AuthContext);\nconst [show, setShow] = useState('Fuel');\nconst [credit, setCredit] = useState(100);\n\nconst classes = useStyles();\nconst CssTextField = withStyles({\n    root: {\n      '& label.Mui-focused': {\n        color: '#FAFAFA',\n      },\n      '& .MuiInput-underline:after': {\n        borderBottomColor: '#FAFAFA',\n      },\n      '& .MuiOutlinedInput-root': {\n        '& fieldset': {\n          borderColor: mode==='Light Mode' ? '#FAFAFA' : '#252526',\n        },\n        '&:hover fieldset': {\n          borderColor: '#FAFAFA',\n        },\n        '&.Mui-focused fieldset': {\n          borderColor: '#FAFAFA',\n        },\n      },\n    },\n  })(TextField);\n    const labelContent = (e) => e.category;\n      return (\n          <div>\n              <div className=\"input-group\" style={{ margin: '0 auto', width: '35%', textAlign: 'center', flexDirection: 'row', }}>\n                            <FormControl className={clsx(classes.margin, classes.textField)} variant='filled'>\n                                <InputLabel style={{ color: mode==='Light Mode' ? '#252526' : '#fafafa', borderColor: '#FAFAFA' }} htmlFor=\"outlined-adornment-password\">Quantity</InputLabel>\n                                <FilledInput\n                                    style={{ backgroundColor: mode==='Light Mode' ? '#fafafa' : '#252526', color: mode==='Light Mode' ? '#252526' : '#fafafa' }}\n                                    id=\"outlined-adornment-password\"\n                                    type='text'\n                                    value={credit}\n                                    autoComplete={false}\n                                    autoCorrect={false}\n                                    onChange={(e)=>setCredit(e.target.value)}\n                                    labelWidth={80}\n                                />\n                                </FormControl>\n                </div>\n                <div className=\"input-group\" style={{ margin: '0 auto', width: '35%', textAlign: 'center', flexDirection: 'row' }}>\n                            <Button onClick={async()=>{\n                            //  signin({ username: email, password: password })\n                            /*   await axios.post(`http://13.233.138.227:8080/puc-certificate-services/login?username=${email}&password=${password}`).then((response)=>{\n                                    console.log('resp', response);\n                                    if(response.data==='success'){\n                                    //set token\n                                        setPassword('');\n                                        setEmail('');\n                                    } else {\n                                        setPassword('');\n                                        setEmail('');\n                                        alert(`err occurred`);\n                                    }\n                                }).catch((err)=>{\n                                    alert('error occurred')\n                                });*/\n                            }} style={{ backgroundColor:mode==='Light Mode' ? '#f3f3f5' :   '#7f7f7f', borderColor:mode==='Light Mode' ? '#FAFAFA' : '#252526', width: '100%', height: '40px', marginTop: 20 }}>Pay ₹ {credit*200}</Button>\n                        </div>\n                <div style={{ height: '50%', width: '100%',textAlign: 'center', margin: '0 auto', justifyContent: 'center', alignItems: 'center', backgroundColor: mode==='Light Mode' ? '#F3F3F5' : '#1e1e1e', marginBottom: 20, marginTop: 20 }}>\n                    \n                </div>\n          </div>\n      )\n  }","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onPageChange } = props;\n\n  const handleFirstPageButtonClick = (event) => {\n    onPageChange(event, 0);\n  };\n\n  const handleBackButtonClick = (event) => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event) => {\n    onPageChange(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = (event) => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (\n    <div classdate_time={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: 10,\n};\n\nfunction createData(date_time, vehicle_num, rto_id, operator_location, operator_id, operator_name, test_status) {\n  return { date_time, vehicle_num, rto_id, operator_location, operator_id, operator_name, test_status };\n}\n\nconst rows = [\n  createData('21-05-21 02:21:33', 'AP 29 AW 8033', 'RTO_id', 'Madhapur', 'B432GD', 'Madhu', 'Fail'),\n  createData('21-05-21 02:21:33', 'AP 29 AW 8033', 'RTO_id',  'Madhapur', 'B432GD', 'Madhu', 'Fail'),\n  createData('21-05-21 02:21:33', 'AP 29 AW 8033', 'RTO_id',  'Madhapur', 'B432GD', 'Madhu', 'Fail'),\n  createData('21-05-21 02:21:33', 'AP 29 AW 8033', 'RTO_id',  'Madhapur', 'B432GD', 'Madhu', 'Fail'),\n  createData('21-05-21 02:21:33', 'AP 29 AW 8033', 'RTO_id',  'Madhapur', 'B432GD', 'Madhu', 'Fail'),\n  createData('21-05-21 02:21:33', 'AP 29 AW 8033', 'RTO_id',  'Madhapur', 'B432GD', 'Madhu', 'Fail'),\n  createData('21-05-21 02:21:33', 'AP 29 AW 8033', 'RTO_id',  'Madhapur', 'B432GD', 'Madhu', 'Fail'),\n  createData('21-05-21 02:21:33', 'AP 29 AW 8033', 'RTO_id',  'Madhapur', 'B432GD', 'Madhu', 'Fail'),\n  createData('21-05-21 02:21:33', 'AP 29 AW 8033', 'RTO_id',  'Madhapur', 'B432GD', 'Madhu', 'Fail'),\n  createData('21-05-21 02:21:33', 'AP 29 AW 8033', 'RTO_id',  'Madhapur', 'B432GD', 'Madhu', 'Fail'),\n  createData('21-05-21 02:21:33', 'AP 29 AW 8033', 'RTO_id',  'Madhapur', 'B432GD', 'Madhu', 'Fail'),\n  createData('21-05-21 02:21:33', 'AP 29 AW 8033', 'RTO_id',  'Madhapur', 'B432GD', 'Madhu', 'Fail'),\n  createData('21-05-21 02:21:33', 'AP 29 AW 8033', 'RTO_id',  'Madhapur', 'B432GD', 'Madhu', 'Fail'),\n  createData('21-05-21 02:21:33', 'AP 29 AW 8033', 'RTO_id',  'Madhapur', 'B432GD', 'Madhu', 'Fail'),\n  createData('21-05-21 02:21:33', 'AP 29 AW 8033', 'RTO_id',  'Madhapur', 'B432GD', 'Madhu', 'Fail'),\n  createData('21-05-21 02:21:33', 'AP 29 AW 8033', 'RTO_id',  'Madhapur', 'B432GD', 'Madhu', 'Fail'),\n  createData('21-05-21 02:21:33', 'AP 29 AW 8033', 'RTO_id',  'Madhapur', 'B432GD', 'Madhu', 'Fail'),\n].sort((a, b) => (a.vehicle_num < b.vehicle_num ? -1 : 1));\n\nconst useStyles2 = makeStyles({\n  table: {\n    minWidth: '90%',\n  },\n});\n\nexport default function Tabe() {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(6);\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table classdate_time={classes.table} aria-label=\"custom pagination table\">\n        <TableBody>\n          {(rowsPerPage > 0\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            : rows\n          ).map((row) => (\n            <TableRow key={row.date_time}>\n              <TableCell style={{ width: '17%' }} component=\"th\" scope=\"row\">\n                {row.date_time}\n              </TableCell>\n              <TableCell style={{ width: '17%' }} align=\"center\">\n                {row.vehicle_num}\n              </TableCell>\n              <TableCell style={{ width: '17%' }} align=\"center\">\n                {row.rto_id}\n              </TableCell>\n              <TableCell style={{ width: '17%' }} align=\"center\">\n                {row.operator_location}\n              </TableCell>\n              <TableCell style={{ width: '17%' }} align=\"center\">\n                {row.operator_id}\n              </TableCell>\n              <TableCell style={{ width: '17%' }} align=\"center\">\n                {row.operator_name}\n              </TableCell>\n              <TableCell style={{ width: '15%' }} align=\"center\">\n                {row.test_status}\n              </TableCell>\n            </TableRow>\n          ))}\n\n          {emptyRows > 0 && (\n            <TableRow style={{ height: 53 * emptyRows }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )}\n        </TableBody>\n        <TableFooter>\n          <TableRow>\n            <TablePagination\n              rowsPerPageOptions={10}\n              colSpan={3}\n              count={rows.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              SelectProps={{\n                inputProps: { 'aria-label': 'rows per page' },\n                native: true,\n              }}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n              ActionsComponent={TablePaginationActions}\n            />\n          </TableRow>\n        </TableFooter>\n      </Table>\n    </TableContainer>\n  );\n}","import React, { useContext, useRef, useState } from 'react';\n//import { NavLink } from 'react-router-dom';\nimport { Modal } from 'react-bootstrap';\nimport axios from 'axios';\nimport { Context as AuthContext } from '../context/AuthContext';\nimport { ButtonGroup, FormControl, IconButton, InputAdornment, InputLabel, makeStyles, OutlinedInput, TextField, withStyles, Button, FilledInput, Grid, Paper } from '@material-ui/core';\nimport { DataGrid, GridRowsProp, GridColDef } from '@material-ui/data-grid';\nimport Webcam from \"react-webcam\";\nimport clsx from 'clsx';\nimport Donut from './Donut';\nimport Bar from './Bar';\nimport Credits from './Credits';\nimport Tabe from './Tabe';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    margin: {\n      margin: theme.spacing(0),\n    },\n    textField: {\n      width: '100%',\n      marginTop: 20,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n  }));\nexport default function Home(){\n    const [image, setImage] = useState(null);\n    const webcamRef = useRef(null);\n    const [phone, setPhone] = useState('');\n    const [modal, setModal] = useState(false);\n    const [otp, setOtp] = useState('')\n    const [success, setSuccess] = useState(false);\n    const [puc, setPuc] = useState(true);\n    const [reports, setReports] = useState(false);\n    const [credits, setCredits] = useState(false);\n    const [history, setHistory] = useState(false);\n    const [show, setShow] = useState('Reports');\n    const [user, setUser] = useState('Operator');\n    const [fetc, setFetc] = useState(false);\n    const [fetcReports, setFetcReports] = useState(false);\n    const [fetcHistory, setFetcHistory] = useState(false);\n    const [fetcCredits, setFetcCredits] = useState(false);\n  //  const [scrolled, setScrolled] = useState(false);\n    const { state: { mode }, signin } = useContext(AuthContext);\n    console.log('mode from home is', mode);\n\n    const classes = useStyles();\n    const CssTextField = withStyles({\n        root: {\n          '& label.Mui-focused': {\n            color: '#FAFAFA',\n          },\n          '& .MuiInput-underline:after': {\n            borderBottomColor: '#FAFAFA',\n          },\n          '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n              borderColor: mode==='Light Mode' ? '#FAFAFA' : '#252526',\n            },\n            '&:hover fieldset': {\n              borderColor: '#FAFAFA',\n            },\n            '&.Mui-focused fieldset': {\n              borderColor: '#FAFAFA',\n            },\n          },\n        },\n      })(TextField);\n    return(\n        <div className='signup-form'>\n            <div style={{ height: '100px', width: '100%',textAlign: 'center', margin: '0 auto', justifyContent: 'center', alignItems: 'center', backgroundColor: mode==='Light Mode' ? '#F3F3F5' : '#252526', }}>\n                    <ButtonGroup  style={{ margin: '0 auto', marginTop: '50px', marginBottom: '50px' }} color=\"primary\" aria-label=\"outlined primary button group\">\n                        <Button onClick={()=>{\n                            //\n                            setUser('Admin');\n                        }} style={{ backgroundColor: show==='Admin' ? mode==='Dark Mode' ? '#1e1e1e' : '#ffffff' : mode==='Dark Mode' ? '#252526' : '#fafafa99', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff' }}>Admin</Button>\n                        <Button onClick={()=>{\n                            //\n                            setUser('RTO');\n                        }} style={{ backgroundColor: show==='RTO' ? mode==='Dark Mode' ? '#1e1e1e' : '#ffffff' : mode==='Dark Mode' ? '#252526' : '#fafafa99', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff' }}>RTO</Button>\n                        <Button onClick={()=>{\n                            //\n                            setUser('Operator');\n                        }} style={{ backgroundColor: show==='Operator' ? mode==='Dark Mode' ? '#1e1e1e' : '#ffffff' : mode==='Dark Mode' ? '#252526' : '#fafafa99', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff' }}>Operator</Button>\n                    </ButtonGroup>\n                </div>\n            {user==='Operator' ?\n            (<div style={{ height: '1000px', width: '100%', backgroundColor: mode==='Light Mode' ? '#F3F3F5' : '#252526', margin: '0 auto' }}>\n                <div style={{ height: '100px', width: '100%',textAlign: 'center', margin: '0 auto', justifyContent: 'center', alignItems: 'center', backgroundColor: mode==='Light Mode' ? '#F3F3F5' : '#252526', }}>\n                    <ButtonGroup  style={{ margin: '0 auto', marginTop: '50px', }} color=\"primary\" aria-label=\"outlined primary button group\">\n                        <Button onClick={()=>{\n                            //\n                            setShow('PUC');\n                        }} style={{ backgroundColor: show==='PUC' ? mode==='Dark Mode' ? '#1e1e1e' : '#ffffff' : mode==='Dark Mode' ? '#252526' : '#fafafa99', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff' }}>PUC</Button>\n                        <Button onClick={()=>{\n                            //\n                            setShow('Reports');\n                        }} style={{ backgroundColor: show==='Reports' ? mode==='Dark Mode' ? '#1e1e1e' : '#ffffff' : mode==='Dark Mode' ? '#252526' : '#fafafa99', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff' }}>Reports</Button>\n                        <Button onClick={()=>{\n                            //\n                            setShow('Credits');\n                        }} style={{ backgroundColor: show==='Credits' ? mode==='Dark Mode' ? '#1e1e1e' : '#ffffff' : mode==='Dark Mode' ? '#252526' : '#fafafa99', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff' }}>Credits</Button>\n                        <Button onClick={()=>{\n                            //\n                            setShow('History');\n                        }} style={{ backgroundColor: show==='History' ? mode==='Dark Mode' ? '#1e1e1e' : '#ffffff' : mode==='Dark Mode' ? '#252526' : '#fafafa99', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff' }}>History</Button>\n                    </ButtonGroup>\n                </div>\n                {show==='PUC' ? fetc===false ? \n                (\n                        <div style={{ height: /*fetc===false ? '700px' : */'600px', width: '70%', backgroundColor: mode==='Light Mode' ? '#ffffff' : '#1e1e1e', margin: '0 auto', marginBottom: 30 }}>\n                        <div className=\"input-group\" style={{ margin: '0 auto', width: '35%', textAlign: 'center', flexDirection: 'row', }}>\n                            <FormControl className={clsx(classes.margin, classes.textField)} variant='filled'>\n                                <InputLabel style={{ color: mode==='Light Mode' ? '#252526' : '#fafafa', borderColor: '#FAFAFA' }} htmlFor=\"outlined-adornment-password\">Phone Number</InputLabel>\n                                <FilledInput\n                                    style={{ backgroundColor: mode==='Light Mode' ? '#fafafa' : '#252526', color: mode==='Light Mode' ? '#252526' : '#fafafa' }}\n                                    id=\"outlined-adornment-password\"\n                                    type='text'\n                                    value={phone}\n                                    autoComplete={false}\n                                    autoCorrect={false}\n                                    onChange={(e)=>setPhone(e.target.value)}\n                                    labelWidth={80}\n                                />\n                                </FormControl>\n                        </div>\n                        <div className=\"input-group\" style={{ margin: '0 auto', width: '35%', textAlign: 'center', flexDirection: 'row' }}>\n                            <FormControl className={clsx(classes.margin, classes.textField)} variant='filled'>\n                                <InputLabel style={{ color: mode==='Light Mode' ? '#252526' : '#fafafa', borderColor: '#FAFAFA' }} htmlFor=\"outlined-adornment-password\">Vehicle Number</InputLabel>\n                                <FilledInput\n                                    style={{ backgroundColor: mode==='Light Mode' ? '#fafafa' : '#252526', color: mode==='Light Mode' ? '#252526' : '#fafafa' }}\n                                    id=\"outlined-adornment-password\"\n                                    type='text'\n                                    value={phone}\n                                    autoComplete={false}\n                                    autoCorrect={false}\n                                    onChange={(e)=>setPhone(e.target.value)}\n                                    labelWidth={80}\n                                />\n                                </FormControl>\n                        </div>\n                        <div className=\"input-group\" style={{ margin: '0 auto', width: '35%', textAlign: 'center', flexDirection: 'row' }}>\n                            {image===null ?\n                                (<Webcam onClick={()=> {\n                                if(webcamRef){\n                                    //\n                                    const photo = webcamRef.current.getScreenshot();\n                                    setImage(photo);\n                                }\n                            }} width='100%' height='100%' style={{ margin: '0 auto', marginTop: 20 }} audio={false} ref={webcamRef} />) : \n                            (\n                                <img   \n                                alt=\"\"\n                                src={image}\n                                width=\"100%\"\n                                height=\"100%\"\n                                style={{  margin: '0 auto', marginTop: 10  }}\n                                className=\"d-inline-block align-top\" />\n                            )\n                            }\n                        </div>\n                        {image!=null ? fetc===false ?\n                        <div className=\"input-group\" style={{ margin: '0 auto', width: '35%', textAlign: 'center', flexDirection: 'row' }}>\n                            <Button onClick={async()=>{\n                            setModal(true)\n                            //  signin({ username: email, password: password })\n                            /*   await axios.post(`http://13.233.138.227:8080/puc-certificate-services/login?username=${email}&password=${password}`).then((response)=>{\n                                    console.log('resp', response);\n                                    if(response.data==='success'){\n                                    //set token\n                                        setPassword('');\n                                        setEmail('');\n                                    } else {\n                                        setPassword('');\n                                        setEmail('');\n                                        alert(`err occurred`);\n                                    }\n                                }).catch((err)=>{\n                                    alert('error occurred')\n                                });*/\n                            }} style={{ backgroundColor:mode==='Light Mode' ? '#f3f3f5' :   '#7f7f7f', borderColor:mode==='Light Mode' ? '#FAFAFA' : '#252526', width: '100%', height: '40px', marginTop: 20 }}>Continue</Button>\n                        </div> : null : null}\n                </div>\n                )\n                :\n                <div style={{ height: '800px', width: '70%', backgroundColor: mode==='Light Mode' ? '#ffffff' : '#1e1e1e', margin: '0 auto',  }}>\n                <div className=\"input-group\" style={{ margin: '0 auto', width: '90%', height: '300px', textAlign: 'center', }}>\n                            <Grid style={{ marginTop: 1 }} container spacing={3}>\n                                <Grid item xs={4}>\n                                    <Button onClick={()=>{\n                                        //\n                                    }} style={{ backgroundColor: mode==='Dark Mode' ? '#1e1e1e'  : 'transparent', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff', width: '100%', marginTop: 30 }}>Phone Number</Button>\n                                    <Button onClick={()=>{\n                                        //\n                                    }} style={{ backgroundColor: mode==='Dark Mode' ? '#1e1e1e'  : 'transparent', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff', width: '100%', marginTop: 30 }}>Vehicle Number</Button>\n                                    <Button onClick={()=>{\n                                        //\n                                    }} style={{ backgroundColor: mode==='Dark Mode' ? '#1e1e1e'  : 'transparent', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff', width: '100%', marginTop: 10  }}>Chasis Number</Button>\n                                    <Button onClick={()=>{\n                                        //\n                                    }} style={{ backgroundColor: mode==='Dark Mode' ? '#1e1e1e'  : 'transparent', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff', width: '100%', marginTop: 10  }}>Year of Regn</Button>\n                                </Grid>\n                                <Grid item xs={4}>\n                                    <Button onClick={()=>{\n                                        //\n                                    }} style={{ backgroundColor: mode==='Dark Mode' ? '#252526'  : '#fafafa', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff', width: '100%', marginTop: 30  }}>9618625767</Button>\n                                    <Button onClick={()=>{\n                                        //\n                                    }} style={{ backgroundColor: mode==='Dark Mode' ? '#252526'  : '#fafafa', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff', width: '100%', marginTop: 30  }}>AP 29 AW 8033</Button>\n                                    <Button onClick={()=>{\n                                        //\n                                    }} style={{ backgroundColor: mode==='Dark Mode' ? '#252526'  : '#fafafa', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff', width: '100%', marginTop: 10  }}>APAW8033AP29AW8033</Button>\n                                    <Button onClick={()=>{\n                                        //\n                                    }} style={{ backgroundColor: mode==='Dark Mode' ? '#252526'  : '#fafafa', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff', width: '100%', marginTop: 10  }}>2012</Button>\n                                </Grid>\n                                <Grid item xs={4}>\n                                    <img   \n                                alt=\"\"\n                                src={image}\n                                width=\"100%\"\n                                height=\"100%\"\n                                style={{  margin: '0 auto', marginTop: 10  }}\n                                className=\"d-inline-block align-top\" />\n                                </Grid>\n                                <Grid item xs={3}>\n                                    <Button onClick={()=>{\n                                        //\n                                    }} style={{ backgroundColor: mode==='Dark Mode' ? '#1e1e1e'  : 'transparent', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff', width: '100%', }}>Type of Vehicle</Button>\n                                </Grid>\n                                <Grid item xs={3}>\n                                    <Button onClick={()=>{\n                                        //\n                                    }} style={{ backgroundColor: mode==='Dark Mode' ? '#252526'  : '#fafafa', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff', width: '100%' }}>2 Wheeler</Button>\n                                </Grid>\n                                <Grid item xs={3}>\n                                    <Button onClick={()=>{\n                                        //\n                                    }} style={{ backgroundColor: mode==='Dark Mode' ? '#1e1e1e'  : 'transparent', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff', width: '100%' }}>Type of Engine</Button>\n                                </Grid>\n                                <Grid item xs={3}>\n                                    <Button onClick={()=>{\n                                        //\n                                    }} style={{ backgroundColor: mode==='Dark Mode' ? '#252526'  : '#fafafa', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff', width: '100%' }}>2 Stroke</Button>\n                                </Grid>\n                                <Grid item xs={3}>\n                                    <Button onClick={()=>{\n                                        //\n                                    }} style={{ backgroundColor: mode==='Dark Mode' ? '#1e1e1e'  : 'transparent', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff', width: '100%', }}>Make</Button>\n                                </Grid>\n                                <Grid item xs={3}>\n                                    <Button onClick={()=>{\n                                        //\n                                    }} style={{ backgroundColor: mode==='Dark Mode' ? '#252526'  : '#fafafa', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff', width: '100%' }}>Honda</Button>\n                                </Grid>\n                                <Grid item xs={3}>\n                                    <Button onClick={()=>{\n                                        //\n                                    }} style={{ backgroundColor: mode==='Dark Mode' ? '#1e1e1e'  : 'transparent', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff', width: '100%' }}>Model</Button>\n                                </Grid>\n                                <Grid item xs={3}>\n                                    <Button onClick={()=>{\n                                        //\n                                    }} style={{ backgroundColor: mode==='Dark Mode' ? '#252526'  : '#fafafa', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff', width: '100%' }}>Activa</Button>\n                                </Grid>\n                                <Grid item xs={3}>\n                                    <Button onClick={()=>{\n                                        //\n                                    }} style={{ backgroundColor: mode==='Dark Mode' ? '#1e1e1e'  : 'transparent', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff', width: '100%' }}>Fuel</Button>\n                                </Grid>\n                                <Grid item xs={3}>\n                                    <Button onClick={()=>{\n                                        //\n                                    }} style={{ backgroundColor: mode==='Dark Mode' ? '#252526'  : '#fafafa', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff', width: '100%' }}>Petrol</Button>\n                                </Grid>\n                                <Grid item xs={6}>\n                                </Grid>\n                                <Grid item xs={2}>\n                                </Grid>\n                                <Grid item xs={2}>\n                                    <span style={{ width: '100px' }}  style={{ color: mode==='Light Mode' ? '#252526' : '#f3f3f599' }}>CO</span>\n                                </Grid>\n                                <Grid item xs={2}>\n                                    <span style={{ width: '100px' }}  style={{ color: mode==='Light Mode' ? '#252526' : '#f3f3f599' }}>HC</span>\n                                </Grid>\n                                <Grid item xs={2}>\n                                    <span style={{ width: '100px' }}  style={{ color: mode==='Light Mode' ? '#252526' : '#f3f3f599' }}>CO2</span>\n                                </Grid>\n                                <Grid item xs={2}>\n                                    <span style={{ width: '100px' }}  style={{ color: mode==='Light Mode' ? '#252526' : '#f3f3f599' }}>O2</span>\n                                </Grid>\n                                <Grid item xs={2}>\n                                </Grid>\n                                <Grid item xs={2}>\n                                    <span  style={{ color: mode==='Light Mode' ? '#252526' : '#f3f3f599' }}>Pres STD</span>\n                                </Grid>\n                                <Grid item xs={2}>\n                                    <Button onClick={()=>{\n                                        //\n                                    }} style={{ backgroundColor: mode==='Dark Mode' ? '#252526'  : '#fafafa', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff', width: '100%' }}>-</Button>\n                                </Grid>\n                                <Grid item xs={2}>\n                                    <Button onClick={()=>{\n                                        //\n                                    }} style={{ backgroundColor: mode==='Dark Mode' ? '#252526'  : '#fafafa', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff', width: '100%' }}>-</Button>\n                                </Grid>\n                                <Grid item xs={2}>\n                                    <Button onClick={()=>{\n                                        //\n                                    }} style={{ backgroundColor: mode==='Dark Mode' ? '#252526'  : '#fafafa', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff', width: '100%' }}>-</Button>\n                                </Grid>\n                                <Grid item xs={2}>\n                                    <Button onClick={()=>{\n                                        //\n                                    }} style={{ backgroundColor: mode==='Dark Mode' ? '#252526'  : '#fafafa', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff', width: '100%' }}>-</Button>\n                                </Grid>\n                                <Grid item xs={2}>\n                                </Grid>\n                                <Grid item xs={2}>\n                                    <span style={{ color: mode==='Light Mode' ? '#252526' : '#f3f3f599' }}>Measured Level</span>\n                                </Grid>\n                                <Grid item xs={2}>\n                                    <Button onClick={()=>{\n                                        //\n                                    }} style={{ backgroundColor: mode==='Dark Mode' ? '#252526'  : '#fafafa', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff', width: '100%' }}>-</Button>\n                                </Grid>\n                                <Grid item xs={2}>\n                                    <Button onClick={()=>{\n                                        //\n                                    }} style={{ backgroundColor: mode==='Dark Mode' ? '#252526'  : '#fafafa', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff', width: '100%' }}>-</Button>\n                                </Grid>\n                                <Grid item xs={2}>\n                                    <Button onClick={()=>{\n                                        //\n                                    }} style={{ backgroundColor: mode==='Dark Mode' ? '#252526'  : '#fafafa', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff', width: '100%' }}>-</Button>\n                                </Grid>\n                                <Grid item xs={2}>\n                                    <Button onClick={()=>{\n                                        //\n                                    }} style={{ backgroundColor: mode==='Dark Mode' ? '#252526'  : '#fafafa', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff', width: '100%' }}>-</Button>\n                                </Grid>\n                                <Grid item xs={2}>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <Button onClick={()=>{\n                                        //\n                                    }} style={{ backgroundColor: mode==='Dark Mode' ? '#252526'  : '#fafafa', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff', width: '100%' }}>Test Result ? </Button>\n                                </Grid>\n                            </Grid>\n                        </div>\n                </div> : null}\n                {show==='Reports' ? fetcReports===false ? \n                (\n                <div style={{ height: /*fetc===false ? '700px' : */'700px', width: '70%', backgroundColor: mode==='Light Mode' ? '#ffffff' : '#1e1e1e', margin: '0 auto', marginBottom: 30 }}>\n                <div className=\"input-group\" style={{ margin: '0 auto', width: '100%', height: '100%', textAlign: 'center', }}>\n                    <Grid style={{ marginTop: 20, height: '100%', width: '100%',margin: '0 auto', }} container spacing={3}>\n                    <Grid item xs={12}>\n                        <Donut />\n                    </Grid>\n                    <Grid style={{ margin: '0 auto', }} item xs={12}>\n                        <Bar />\n                    </Grid>\n                   </Grid>\n                   </div>\n                </div>)\n                :\n                (\n                <div>\n                </div>\n                ) : null}\n                {show==='History' ? fetcHistory===false ? \n                (\n                <div style={{ height: /*fetc===false ? '700px' : */'600px', width: '70%', backgroundColor: mode==='Light Mode' ? '#ffffff00' : '#1e1e1e00', margin: '0 auto', marginBottom: 30 }}>\n                    <Tabe />\n                </div>)\n                :\n                (\n                <div>\n                </div>\n                ) : null}\n                {show==='Credits' ? fetcCredits===false ? \n                (\n                <div style={{ height: /*fetc===false ? '700px' : */'600px', width: '70%', backgroundColor: mode==='Light Mode' ? '#ffffff' : '#1e1e1e', margin: '0 auto', marginBottom: 30 }}>\n                    <Credits />\n                </div>)\n                :\n                (\n                <div>\n                </div>\n                ) : null}\n            </div>)\n            : null\n            }\n            {user==='RTO' ?\n            (<div style={{ height: '1000px', width: '100%', backgroundColor: mode==='Light Mode' ? '#F3F3F5' : '#252526', margin: '0 auto' }}>\n                <div style={{ height: '100px', width: '100%',textAlign: 'center', margin: '0 auto', justifyContent: 'center', alignItems: 'center', backgroundColor: mode==='Light Mode' ? '#F3F3F5' : '#252526' }}>\n                    <ButtonGroup  style={{ margin: '0 auto', marginTop: '50px', }} color=\"primary\" aria-label=\"outlined primary button group\">\n                        <Button onClick={()=>{\n                            //\n                            setShow('Reports');\n                        }} style={{ backgroundColor: show==='Reports' ? mode==='Dark Mode' ? '#1e1e1e' : '#ffffff' : mode==='Dark Mode' ? '#252526' : '#fafafa99', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff' }}>Reports</Button>\n                        <Button onClick={()=>{\n                            //\n                            setShow('Manage');\n                        }} style={{ backgroundColor: show==='Manage' ? mode==='Dark Mode' ? '#1e1e1e' : '#ffffff' : mode==='Dark Mode' ? '#252526' : '#fafafa99', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff' }}>Manage Operator</Button>\n                        <Button onClick={()=>{\n                            //\n                            setShow('History');\n                        }} style={{ backgroundColor: show==='History' ? mode==='Dark Mode' ? '#1e1e1e' : '#ffffff' : mode==='Dark Mode' ? '#252526' : '#fafafa99', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff' }}>History</Button>\n                    </ButtonGroup>\n                </div>\n                {show==='Reports' ? fetcReports===false ? \n                (\n                <div style={{ height: /*fetc===false ? '700px' : */'700px', width: '70%', backgroundColor: mode==='Light Mode' ? '#ffffff' : '#1e1e1e', margin: '0 auto', marginBottom: 30 }}>\n                <div className=\"input-group\" style={{ margin: '0 auto', width: '100%', height: '100%', textAlign: 'center', }}>\n                    <Grid style={{ marginTop: 20, height: '100%', width: '100%',margin: '0 auto', }} container spacing={3}>\n                    <Grid item xs={12}>\n                        <Donut />\n                    </Grid>\n                    <Grid style={{ margin: '0 auto', }} item xs={12}>\n                        <Bar />\n                    </Grid>\n                   </Grid>\n                   </div>\n                </div>)\n                :\n                (\n                <div>\n                </div>\n                ) : null}\n                {show==='History' ? fetcHistory===false ? \n                (\n                <div style={{ height: /*fetc===false ? '700px' : */'600px', width: '70%', backgroundColor: mode==='Light Mode' ? '#ffffff00' : '#1e1e1e00', margin: '0 auto', marginBottom: 30 }}>\n                    <Tabe />\n                </div>)\n                :\n                (\n                <div>\n                </div>\n                ) : null}\n                {show==='Manage' ? fetcCredits===false ? \n                (\n                <div style={{ height: /*fetc===false ? '700px' : */'600px', width: '70%', backgroundColor: mode==='Light Mode' ? '#ffffff' : '#1e1e1e', margin: '0 auto', marginBottom: 30 }}>\n                    \n                </div>)\n                :\n                (\n                <div>\n                </div>\n                ) : null}\n            </div>)\n            : null\n            }\n            {user==='Admin' ?\n            (<div style={{ height: '1000px', width: '100%', backgroundColor: mode==='Light Mode' ? '#F3F3F5' : '#252526', margin: '0 auto' }}>\n                <div style={{ height: '100px', width: '100%',textAlign: 'center', margin: '0 auto', justifyContent: 'center', alignItems: 'center', backgroundColor: mode==='Light Mode' ? '#F3F3F5' : '#252526' }}>\n                    <ButtonGroup  style={{ margin: '0 auto', marginTop: '50px', }} color=\"primary\" aria-label=\"outlined primary button group\">\n                        <Button onClick={()=>{\n                            //\n                            setShow('RManage');\n                        }} style={{ backgroundColor: show==='RManage' ? mode==='Dark Mode' ? '#1e1e1e' : '#ffffff' : mode==='Dark Mode' ? '#252526' : '#fafafa99', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff' }}>Manage RTO</Button>\n                        <Button onClick={()=>{\n                            //\n                            setShow('Reports');\n                        }} style={{ backgroundColor: show==='Reports' ? mode==='Dark Mode' ? '#1e1e1e' : '#ffffff' : mode==='Dark Mode' ? '#252526' : '#fafafa99', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff' }}>Reports</Button>\n                        <Button onClick={()=>{\n                            //\n                            setShow('Manage');\n                        }} style={{ backgroundColor: show==='Manage' ? mode==='Dark Mode' ? '#1e1e1e' : '#ffffff' : mode==='Dark Mode' ? '#252526' : '#fafafa99', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff' }}>Manage Operator</Button>\n                        <Button onClick={()=>{\n                            //\n                            setShow('History');\n                        }} style={{ backgroundColor: show==='History' ? mode==='Dark Mode' ? '#1e1e1e' : '#ffffff' : mode==='Dark Mode' ? '#252526' : '#fafafa99', color: mode==='Light Mode' ? '#252526' : '#f3f3f599', borderColor: mode==='Dark Mode' ? '#1e1e1e' : '#ffffff' }}>History</Button>\n                    </ButtonGroup>\n                </div>\n                {show==='Reports' ? fetcReports===false ? \n                (\n                <div style={{ height: /*fetc===false ? '700px' : */'700px', width: '70%', backgroundColor: mode==='Light Mode' ? '#ffffff' : '#1e1e1e', margin: '0 auto', marginBottom: 30 }}>\n                <div className=\"input-group\" style={{ margin: '0 auto', width: '100%', height: '100%', textAlign: 'center', }}>\n                    <Grid style={{ marginTop: 20, height: '100%', width: '100%',margin: '0 auto', }} container spacing={3}>\n                    <Grid item xs={12}>\n                        <Donut />\n                    </Grid>\n                    <Grid style={{ margin: '0 auto', }} item xs={12}>\n                        <Bar />\n                    </Grid>\n                   </Grid>\n                   </div>\n                </div>)\n                :\n                (\n                <div>\n                </div>\n                ) : null}\n                {show==='History' ? fetcHistory===false ? \n                (\n                <div style={{ height: /*fetc===false ? '700px' : */'600px', width: '70%', backgroundColor: mode==='Light Mode' ? '#ffffff00' : '#1e1e1e00', margin: '0 auto', marginBottom: 30 }}>\n                    <Tabe />\n                </div>)\n                :\n                (\n                <div>\n                </div>\n                ) : null}\n                {show==='RManage' ? fetcCredits===false ? \n                (\n                <div style={{ height: /*fetc===false ? '700px' : */'600px', width: '70%', backgroundColor: mode==='Light Mode' ? '#ffffff' : '#1e1e1e', margin: '0 auto', marginBottom: 30 }}>\n                    \n                </div>)\n                :\n                (\n                <div>\n                </div>\n                ) : null}\n                {show==='Manage' ? fetcCredits===false ? \n                (\n                <div style={{ height: /*fetc===false ? '700px' : */'600px', width: '70%', backgroundColor: mode==='Light Mode' ? '#ffffff' : '#1e1e1e', margin: '0 auto', marginBottom: 30 }}>\n                    \n                </div>)\n                :\n                (\n                <div>\n                </div>\n                ) : null}\n            </div>)\n            : null\n            }\n            <Modal show={modal} onHide={()=> setModal(false)}>\n                <Modal.Header closeButton onClick={()=>setModal(false)} />\n                {success===true ? (<div style={{ backgroundColor: '#ffffff', height: '400px', margin: '0 auto', width: '300px', textAlign: 'center' }}>\n                    <span style={{ fontSize: '17px', marginTop: '90px', color: '#32a852' }}>\n                        Congratulations, {phone} is added to the firstlist and please wait till our next update\n                    </span>\n                </div>) :\n                (\n                <div style={{ backgroundColor: '#ffffff', height: '400px', margin: '0 auto', width: '300px', textAlign: 'center' }}>\n                    <h5 style={{ marginTop: '90px' }}>\n                        Enter Your One Time Password sent to {phone}\n                    </h5>\n                    <div style={{ margin: '0 auto', width: '300px', textAlign: 'center', }}>\n                        <input inputMode='tel' type=\"number\" className=\"form-control\" name=\"mobile\" placeholder=\"OTP\" required=\"required\" value={otp} onChange={e=>setOtp(e.target.value)} />\n                    </div>\n                    {otp!=null && otp.length===6 ?\n                    (<div style={{ margin: '0 auto', marginTop: '5px', width: '300px', textAlign: 'center' }}>\n                        <Button onClick={async()=>{\n                            setModal(false)\n                            setFetc(true)\n                            //\n                            //setModal(true)\n                           /* await axios.post(`https://749vraxin6.execute-api.ap-south-1.amazonaws.com/verify?phone=${phone}&otp=${otp}`).then((response)=>{\n                              //  const a = response.data;\n                              //  console.log('resp', response);\n                                if(response.data==='success'){\n                                //    console.log('response.data :', response.data);\n                                    setSuccess(true);\n                                    setOtp('');\n                                    setPhone('');\n                                } else {\n                                    setOtp('');\n                                    setPhone('');\n                                    alert(`err occurred`);\n                                }\n                            }).catch((err)=>{\n                                alert('error occurred')\n                            });*/\n                        }} variant=\"success\">Join the Firstlist</Button>\n                    </div>) : null}\n                </div>)}\n            </Modal>\n        </div>\n    )\n}\n\n\n/*\n\n\n                            <FormControl className={clsx(classes.margin, classes.textField)} variant='filled'>\n                                <InputLabel style={{ color: mode==='Light Mode' ? '#252526' : '#fafafa', borderColor: '#FAFAFA' }} htmlFor=\"outlined-adornment-password\">Vehicle Number</InputLabel>\n                                <FilledInput\n                                    style={{ backgroundColor: mode==='Light Mode' ? '#fafafa' : '#252526', color: mode==='Light Mode' ? '#252526' : '#fafafa' }}\n                                    id=\"outlined-adornment-password\"\n                                    type='text'\n                                    value={phone}\n                                    autoComplete={false}\n                                    autoCorrect={false}\n                                    onChange={(e)=>setPhone(e.target.value)}\n                                    labelWidth={80}\n                                />\n                                </FormControl>\n\n                            <FormControl className={clsx(classes.margin, classes.textField)} variant='filled'>\n                                <InputLabel style={{ color: mode==='Light Mode' ? '#252526' : '#fafafa', borderColor: '#FAFAFA' }} htmlFor=\"outlined-adornment-password\">Phone Number</InputLabel>\n                                <FilledInput\n                                    style={{ backgroundColor: mode==='Light Mode' ? '#fafafa' : '#252526', color: mode==='Light Mode' ? '#252526' : '#fafafa' }}\n                                    id=\"outlined-adornment-password\"\n                                    type='text'\n                                    value={phone}\n                                    autoComplete={false}\n                                    autoCorrect={false}\n                                    onChange={(e)=>setPhone(e.target.value)}\n                                    labelWidth={80}\n                                />\n                                </FormControl>\n*/\n\n/*\n        <div style={{ height: '600px', backgroundColor: '#ffffff', }}></div>\n        <div style={{ height: '50px', backgroundColor: 'honeydew', }}>\n            \n        </div>\n\n            <label className=\"form-check-label\">By Clicking Join the Firstlist, I agree to your <NavLink to=\"/login\">Terms of Use</NavLink> &amp; <NavLink to=\"/login\">Privacy Policy</NavLink></label>\n\n            How many of you agree that there are great places in your cities ?\n            And how many of you quiet often go to these places ?\n            Like wise for me its my home, office and i go out for lunch twice a week,  \n\n\n            */\n\n","import React, { useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Context as AuthContext } from '../context/AuthContext';\nimport { FormControl, IconButton, InputAdornment, InputLabel, makeStyles, OutlinedInput, TextField, withStyles, Button, FilledInput } from '@material-ui/core';\nimport { SingleBedOutlined, Visibility, VisibilityOff } from '@material-ui/icons';\n\nimport clsx from 'clsx';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    margin: {\n      margin: theme.spacing(0),\n    },\n    textField: {\n      width: '300px',\n    },\n  }));\nexport default function Login(){\n\n\n  useEffect(() => {\n    (async () => {\n     // if (\"serial\" in navigator) {\n        //\n       // alert('hiiii')\n      //  await navigator.serial.requestPort();\n       //console.log('port:  ', serial);\n     // }\n    })();\n  }, []);\n  /*\nuseEffect(()=>{\n\n  if(\"serial\" in navigator){\n    window.alert(\"Serial suported\");\n    const ports = navigator.serial.getPorts();\n    window.alert(\"ports\" + ports);\n  } else {\n    window.alert(\"Not supported\");\n  }\n\n  // RNSerialport.getDeviceList((response) => {\n  //   if (!response.status) {\n  //     response.log(\"Error from getDeviceList()\", response.errorCode + \" \" + response.errorMessage)\n  //     return;\n  //   }\n  //   console.log(response.devices)//list\n  // });\n},[])\n\n*/\n\n\n    const [email, setEmail] = useState('');\n    const [modal, setModal] = useState(false);\n   const [otp, setOtp] = useState('');\n    const [success, setSuccess] = useState(false);\n    const [password, setPassword] = useState('')\n    const { state: { mode }, signin } = useContext(AuthContext);\n    console.log('mode from login is', mode);\n    const [showPassword, setShowPassword] = useState(false);\n    const classes = useStyles();\n    const CssTextField = withStyles({\n        root: {\n          '& label.Mui-focused': {\n            color: '#FAFAFA',\n          },\n          '& .MuiInput-underline:after': {\n            borderBottomColor: '#FAFAFA',\n          },\n          '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n              borderColor: mode==='Light Mode' ? '#FAFAFA' : '#252526',\n            },\n            '&:hover fieldset': {\n              borderColor: '#FAFAFA',\n            },\n            '&.Mui-focused fieldset': {\n              borderColor: '#FAFAFA',\n            },\n          },\n        },\n      })(TextField);\n    return(\n        <div className='login-form'>\n            <div style={{ height: '1000px', width: '100%', backgroundColor: mode==='Light Mode' ? '#FAFAFA' : '#252526', margin: '0 auto' }}>\n                <div style={{ height: '650px', width: '400px', margin: '0 auto', }}>\n                    <div style={{ height: '150px', width: '100%', flexDirection: 'row', backgroundColor: mode==='Light Mode' ? '#FAFAFA' :  '#252526', }}>\n                        <div style={{ height: '100%', width: '150px', margin: '0 auto' }}>\n                            <img\n                            alt=\"\"\n                            src='https://www.tapeit.in/assets/images/logoNew1.png'\n                            width=\"60%\"\n                            height=\"30%\"\n                            style={{ marginTop: 50, marginLeft: 30 }}\n                        />\n                        </div>\n                    </div>\n                    <div style={{ height: '500px', width: '100%', backgroundColor: mode==='Light Mode' ? '#FFFFFF' :  '#3E3E3E', }}>\n                        <h2 style={{ color:mode==='Light Mode' ? '#000000' :   '#ffffff', }}>Get Started</h2>\n                        <h3 style={{ color:mode==='Light Mode' ? '#00000099' :   '#ffffff99', }}>Enter your Auto user name and password</h3>\n                        <div className=\"input-group\" style={{ margin: '0 auto', width: '300px', textAlign: 'center', marginTop: 30 }}>\n                            <FormControl className={clsx(classes.margin, classes.textField)} variant='filled'>\n                                <InputLabel style={{ color: '#252526', borderColor: '#FAFAFA' }} htmlFor=\"outlined-adornment-password\">User name</InputLabel>\n                                <FilledInput\n                                    style={{ backgroundColor: mode==='Light Mode' ? '#fafafa' : '#FAFAFA' }}\n                                    id=\"outlined-adornment-password\"\n                                    type='text'\n                                    value={email}\n                                    autoComplete='none'\n                                    onChange={(e)=>setEmail(e.target.value)}\n                                    labelwidth={80}\n                                />\n                                </FormControl>\n                        </div>\n                        <div className=\"input-group\" style={{ margin: '0 auto', width: '300px', textAlign: 'center', marginTop: 30 }}>\n                            <FormControl className={clsx(classes.margin, classes.textField)} variant='filled'>\n                                <InputLabel style={{ color: '#252526', borderColor: '#FAFAFA',  }} htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n                                <FilledInput\n                                    style={{ backgroundColor: mode==='Light Mode' ? '#fafafa' : '#FAFAFA' }}\n                                    id=\"outlined-adornment-password\"\n                                    type={showPassword ? 'text' : 'password'}\n                                    value={password}\n                                    autoComplete='none'\n                                    onChange={(e)=>setPassword(e.target.value)}\n                                    endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                        aria-label=\"toggle password visibility\"\n                                        onClick={()=>setShowPassword(!showPassword)}\n                                        onMouseDown={(e)=> e.preventDefault()}\n                                        edge=\"end\"\n                                        >\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                    }\n                                    labelwidth={70}\n                                />\n                                </FormControl>\n                        </div>\n                        <div style={{ margin: '0 auto', marginTop: '30px', width: '300px', textAlign: 'center' }}>\n                        <Button onClick={async()=>{\n // const a =  await navigator.serial.requestPort();\n       // const usb = await navigator.usb.requestDevice({ filters: [{ vendorId: 10007 }] });\n        //await a.open();\n       // console.log('a',usb);\n                            signin({ username: email, password: password })\n                         /*   await axios.post(`http://13.233.138.227:8080/puc-certificate-services/login?username=${email}&password=${password}`).then((response)=>{\n                                console.log('resp', response);\n                                if(response.data==='success'){\n                                   //set token\n                                    setPassword('');\n                                    setEmail('');\n                                } else {\n                                    setPassword('');\n                                    setEmail('');\n                                    alert(`err occurred`);\n                                }\n                            }).catch((err)=>{\n                                alert('error occurred')\n                            });*/\n                        }} style={{ backgroundColor:mode==='Light Mode' ? '#7F7F7F' :   '#252526', borderColor:mode==='Light Mode' ? '#FAFAFA' : '#252526', width: '300px', height: '40px', }}>Continue</Button>\n                        <div style={{ fontSize: '13px', color:mode==='Light Mode' ? '#000000' :   '#ffffff', marginTop: '10px' }} className=\"text-center\">By continuing, you agree to <span style={{ fontSize: '13px', color:mode==='Light Mode' ? '#000000' :   '#ffffff', textDecorationLine: 'underline' }} onClick={()=>{\n                            //\n                            alert('t&c')\n                        }}>T&C</span> & <span style={{ fontSize: '13px', color: mode==='Light Mode' ? '#000000' :  '#ffffff', textDecorationLine: 'underline' }} onClick={()=>{\n                            //\n                            alert('pp')\n                        }}>Privacy Policy</span></div>\n                    </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\n","import React, { useContext, useState } from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { Context as AuthContext } from '../context/AuthContext';\nimport {\n    BrowserRouter as Router,\n    Switch as RSwitch,\n    Route,\n    Link\n  } from \"react-router-dom\";\nimport About from './About';\nimport Home from './Home';\nimport Login from './Login';\nimport { Switch, withStyles } from '@material-ui/core';\nimport { purple } from '@material-ui/core/colors';\n\nexport default function NavBar(scrolled){\n    //\n    const { state: { mode }, changeToDarkMode, changeToLightMode } = useContext(AuthContext);\n    const [navColor, setNavColor] = useState('#1e1e1e');\n    const [aboutTab, setAboutTab]= useState(false);\n    const [homeTab, setHomeTab] = useState(true);\n    const { state : { token } } = useContext(AuthContext);\n  //  const prevScroll = window.pageYOffset;\n    //const [visible, setVisible] = useState(true);\n    //const [scrollPos, setScrollPos] = useState(0);\n/*\n    function HandleScroll(){\n        //const currentScroll = window.pageYOffset;\n        //setVisible(prevScroll>currentScroll);\n\n        setScrollPos(document.body.getBoundingClientRect().top);\n        setVisible(document.body.getBoundingClientRect().top > scrollPos)\n    }\n\n    useEffect(()=>{\n        window.addEventListener('scroll', HandleScroll);\n\n        return ()=> {\n            window.removeEventListener('scroll', HandleScroll);\n        }\n    },[visible])\n*/\nconst PurpleSwitch = withStyles({\n    switchBase: {\n      color: mode==='Dark Mode' ? '#252526' : '#ffffff',\n      '&$checked': {\n        color: mode==='Dark Mode' ? '#252526' : '#ffffff',\n      },\n      '&$checked + $track': {\n        backgroundColor: mode==='Dark Mode' ? '#fafafa' : '#fafafa',\n      },\n    },\n    checked: {},\n    track: {},\n  })(Switch);\n    return (\n        <Router>\n            <div>\n                <Navbar /* hidden={token!=null ? false : true}*/ className=\"navbar-header\" \n                style={{ backgroundColor: mode==='Light Mode' ? token!=null ? '#ffffff' : '#fafafa' : token!=null ? '#1e1e1e' : '#252526' }}>\n                    <Navbar.Brand>\n                        {token!=null ?\n                        <img\n                            alt=\"\"\n                            src='https://www.tapeit.in/assets/images/logoNew1.png'\n                            width=\"22%\"\n                            height=\"11%\"\n                            className=\"d-inline-block align-top\"\n                        /> : null}\n                    </Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"ml-auto\">\n                            {token===null ?\n                            (<Nav.Link onClick={()=>{\n                                setNavColor('#ff3838');\n                                //remove token from state\n                                setHomeTab(false);\n                                setAboutTab(true);\n                            }} style={{ color: '#ffffff', fontSize: '15px' }}></Nav.Link>\n                            ) : null}\n                        </Nav>\n                        <Nav className=\"ml-auto\">\n                            <PurpleSwitch checked={mode==='Dark Mode' ? true : false} onChange={(e)=>{\n                                if(e.target.checked===true){\n                                    changeToDarkMode()\n                                } else{\n                                    changeToLightMode()\n                                }\n                            }} />\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n            </div>\n            <div>\n                <RSwitch>\n                    <Route path=\"/\">\n                        {token!=null ?\n                        <Home /> : <Login />}\n                    </Route>\n                </RSwitch>\n            </div>\n        </Router>\n    )\n}\n\n///// use context to update sethometab to true after saving token","import React, { useContext } from 'react';\nimport { Nav } from 'react-bootstrap';\nimport { Context as AuthContext } from '../context/AuthContext';\n\nimport {\n    BrowserRouter as Router,\n  } from \"react-router-dom\";\nimport { Switch, withStyles } from '@material-ui/core';\nimport { purple } from '@material-ui/core/colors';\n\nexport default function BaseNav(){\n    //\n    const { state: { mode }, changeToDarkMode, changeToLightMode } = useContext(AuthContext);\n    const PurpleSwitch = withStyles({\n        switchBase: {\n          color: '#252526',\n          '&$checked': {\n            color: '#ffffff',\n          },\n          '&$checked + $track': {\n            backgroundColor: '#fafafa',\n          },\n        },\n        checked: {},\n        track: {},\n      })(Switch);\n    return (\n        <Router>\n            <div>\n                <Nav style={{ backgroundColor:mode==='Light Mode' ? '#F3F3F5' : '#1D1D1D' }} className=\"justify-content-center\" activeKey=\"/\">\n                    <Nav.Item>\n                    <Nav.Link style={{ color: mode==='Light Mode' ? '#00000099' : '#ffffff', fontSize: '15px' }} eventKey=\"link-1\">Privacy Policy</Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                    <Nav.Link style={{ color: mode==='Light Mode' ? '#00000099' : '#ffffff', fontSize: '15px' }} eventKey=\"link-1\">T&C</Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                    <Nav.Link style={{ color: mode==='Light Mode' ? '#00000099' : '#ffffff99', fontSize: '14px' }} eventKey=\"link-1\">© Integer Info Solutions Pvt. Ltd.</Nav.Link>\n                    </Nav.Item>\n                </Nav>\n            </div>\n        </Router>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NavBar from './components/NavBar';\nimport BaseNav from './components/BaseNav';\nimport { Provider as AuthProvider } from './context/AuthContext'\n\n\n\nReactDOM.render(\n    <React.Fragment>\n      <AuthProvider>\n        <NavBar />\n        <BaseNav />\n      </AuthProvider>\n    </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n/*\n\n          <p style={{ height: 100, backgroundColor: 'green', textAlign: 'left', }}>\n            <text style={{ fontSize: '35px', color: '#ffffff', fontWeight: 'bold', fontFamily: 'sans-serif', textAlign: 'left' }}>Juiy, Light and Fun<br />to Places</text>\n          </p>\n      <div style={{ flex: 9, backgroundColor: '#ffffff', }}>\n        <img src={`${process.env.PUBLIC_URL}/assets/n1.jpg`} height='500' width='300' />\n      </div>\n\n*/"],"sourceRoot":""}